Number of nodes =  4
Number of executors =  7
myHadoop: Setting MH_IPOIB_TRANSFORM='s/\([^.]*\).*$/\1.ibnet/' from myhadoop.conf
myHadoop: Setting MH_SCRATCH_DIR=/scratch/$USER/$SLURM_JOBID from myhadoop.conf
myHadoop: Using HADOOP_HOME=/opt/hadoop/2.6.0
myHadoop: Using MH_SCRATCH_DIR=/scratch/fegaras/35207014
myHadoop: Using JAVA_HOME=/lib/jvm/java
myHadoop: Generating Hadoop configuration in directory in /home/fegaras/cometcluster...
myHadoop: Backing up old config dir to /home/fegaras/cometcluster.37...
‘/home/fegaras/cometcluster’ -> ‘/home/fegaras/cometcluster.37’
myHadoop: Designating comet-17-09.ibnet as master node (namenode, secondary namenode, and jobtracker)
myHadoop: The following nodes will be slaves (datanode, tasktracer):
comet-17-09.ibnet
comet-17-17.ibnet
comet-17-19.ibnet
comet-17-23.ibnet
20/08/10 09:05:36 INFO namenode.NameNode: STARTUP_MSG: 
/************************************************************
STARTUP_MSG: Starting NameNode
STARTUP_MSG:   host = comet-17-09.sdsc.edu/198.202.113.31
STARTUP_MSG:   args = [-format]
STARTUP_MSG:   version = 2.6.0
STARTUP_MSG:   classpath = /home/fegaras/cometcluster:/opt/hadoop/2.6.0/share/hadoop/common/lib/jetty-6.1.26.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jersey-json-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/httpclient-4.2.5.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-collections-3.2.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-io-2.4.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/activation-1.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-cli-1.2.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/xz-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/slf4j-api-1.7.5.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/netty-3.6.2.Final.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/avro-1.7.4.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-el-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-configuration-1.6.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jaxb-impl-2.2.3-1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/paranamer-2.3.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/protobuf-java-2.5.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/api-util-1.0.0-M20.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jsp-api-2.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/java-xmlbuilder-0.4.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/snappy-java-1.0.4.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jasper-runtime-5.5.23.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/httpcore-4.2.5.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-net-3.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jettison-1.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jetty-util-6.1.26.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/apacheds-kerberos-codec-2.0.0-M15.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/api-asn1-api-1.0.0-M20.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-compress-1.4.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jaxb-api-2.2.2.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/junit-4.11.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/slf4j-log4j12-1.7.5.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-httpclient-3.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/log4j-1.2.17.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/xmlenc-0.52.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jasper-compiler-5.5.23.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/curator-framework-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jsch-0.1.42.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/hamcrest-core-1.3.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jets3t-0.9.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/apacheds-i18n-2.0.0-M15.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-lang-2.6.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jsr305-1.3.9.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/mockito-all-1.8.5.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-digester-1.8.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/hadoop-annotations-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/servlet-api-2.5.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/htrace-core-3.0.4.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/curator-recipes-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-codec-1.4.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jackson-xc-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-math3-3.1.1.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/gson-2.2.4.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/guava-11.0.2.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-beanutils-1.7.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jersey-server-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/stax-api-1.0-2.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-logging-1.1.3.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/zookeeper-3.4.6.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/jersey-core-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/asm-3.2.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/hadoop-auth-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/commons-beanutils-core-1.8.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/lib/curator-client-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/hadoop-nfs-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/common/hadoop-common-2.6.0-tests.jar:/opt/hadoop/2.6.0/share/hadoop/common/hadoop-common-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jetty-6.1.26.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-io-2.4.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-cli-1.2.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/netty-3.6.2.Final.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-el-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/protobuf-java-2.5.0.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jsp-api-2.1.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jasper-runtime-5.5.23.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jetty-util-6.1.26.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-daemon-1.0.13.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/log4j-1.2.17.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/xmlenc-0.52.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/xercesImpl-2.9.1.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-lang-2.6.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jsr305-1.3.9.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/servlet-api-2.5.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/htrace-core-3.0.4.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-codec-1.4.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/guava-11.0.2.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jersey-server-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/commons-logging-1.1.3.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/xml-apis-1.3.04.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/jersey-core-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/lib/asm-3.2.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/hadoop-hdfs-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/hadoop-hdfs-nfs-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/hdfs/hadoop-hdfs-2.6.0-tests.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jline-0.9.94.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jetty-6.1.26.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jersey-json-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-collections-3.2.1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-io-2.4.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/activation-1.1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-cli-1.2.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/xz-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/netty-3.6.2.Final.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jaxb-impl-2.2.3-1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/protobuf-java-2.5.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jersey-guice-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/aopalliance-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jettison-1.1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jetty-util-6.1.26.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-compress-1.4.1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jaxb-api-2.2.2.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-httpclient-3.1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/log4j-1.2.17.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/javax.inject-1.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jersey-client-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-lang-2.6.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jsr305-1.3.9.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/servlet-api-2.5.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/leveldbjni-all-1.8.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-codec-1.4.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jackson-xc-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/guava-11.0.2.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jackson-jaxrs-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jersey-server-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/stax-api-1.0-2.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/guice-servlet-3.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/commons-logging-1.1.3.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/zookeeper-3.4.6.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/jersey-core-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/asm-3.2.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/lib/guice-3.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-registry-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-server-common-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-server-applicationhistoryservice-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-api-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-server-resourcemanager-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-common-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-applications-unmanaged-am-launcher-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-client-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-server-web-proxy-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-applications-distributedshell-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-server-tests-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/yarn/hadoop-yarn-server-nodemanager-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/commons-io-2.4.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/xz-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/netty-3.6.2.Final.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/avro-1.7.4.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/paranamer-2.3.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/protobuf-java-2.5.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/jersey-guice-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/snappy-java-1.0.4.1.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/aopalliance-1.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/jackson-mapper-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/commons-compress-1.4.1.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/junit-4.11.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/log4j-1.2.17.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/javax.inject-1.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/jackson-core-asl-1.9.13.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/hamcrest-core-1.3.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/hadoop-annotations-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/leveldbjni-all-1.8.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/jersey-server-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/guice-servlet-3.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/jersey-core-1.9.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/asm-3.2.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/lib/guice-3.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-plugins-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-common-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.6.0-tests.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-hs-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-app-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-core-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-jobclient-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-client-shuffle-2.6.0.jar:/opt/hadoop/2.6.0/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar:/opt/hadoop/2.6.0/contrib/capacity-scheduler/*.jar
STARTUP_MSG:   build = https://git-wip-us.apache.org/repos/asf/hadoop.git -r e3496499ecb8d220fba99dc5ed4c99c8f9e33bb1; compiled by 'jenkins' on 2014-11-13T21:10Z
STARTUP_MSG:   java = 1.8.0_212
************************************************************/
20/08/10 09:05:36 INFO namenode.NameNode: registered UNIX signal handlers for [TERM, HUP, INT]
20/08/10 09:05:36 INFO namenode.NameNode: createNameNode [-format]
20/08/10 09:05:36 WARN common.Util: Path /scratch/fegaras/35207014/namenode_data should be specified as a URI in configuration files. Please update hdfs configuration.
20/08/10 09:05:36 WARN common.Util: Path /scratch/fegaras/35207014/namenode_data should be specified as a URI in configuration files. Please update hdfs configuration.
Formatting using clusterid: CID-d1b0891d-ed49-4baa-8fd2-5549b612f672
20/08/10 09:05:36 INFO namenode.FSNamesystem: No KeyProvider found.
20/08/10 09:05:36 INFO namenode.FSNamesystem: fsLock is fair:true
20/08/10 09:05:36 INFO blockmanagement.DatanodeManager: dfs.block.invalidate.limit=1000
20/08/10 09:05:36 INFO blockmanagement.DatanodeManager: dfs.namenode.datanode.registration.ip-hostname-check=true
20/08/10 09:05:36 INFO blockmanagement.BlockManager: dfs.namenode.startup.delay.block.deletion.sec is set to 000:00:00:00.000
20/08/10 09:05:36 INFO blockmanagement.BlockManager: The block deletion will start around 2020 Aug 10 09:05:36
20/08/10 09:05:36 INFO util.GSet: Computing capacity for map BlocksMap
20/08/10 09:05:36 INFO util.GSet: VM type       = 64-bit
20/08/10 09:05:36 INFO util.GSet: 2.0% max memory 958.5 MB = 19.2 MB
20/08/10 09:05:36 INFO util.GSet: capacity      = 2^21 = 2097152 entries
20/08/10 09:05:36 INFO blockmanagement.BlockManager: dfs.block.access.token.enable=false
20/08/10 09:05:36 INFO blockmanagement.BlockManager: defaultReplication         = 3
20/08/10 09:05:36 INFO blockmanagement.BlockManager: maxReplication             = 512
20/08/10 09:05:36 INFO blockmanagement.BlockManager: minReplication             = 1
20/08/10 09:05:36 INFO blockmanagement.BlockManager: maxReplicationStreams      = 2
20/08/10 09:05:36 INFO blockmanagement.BlockManager: shouldCheckForEnoughRacks  = false
20/08/10 09:05:36 INFO blockmanagement.BlockManager: replicationRecheckInterval = 3000
20/08/10 09:05:36 INFO blockmanagement.BlockManager: encryptDataTransfer        = false
20/08/10 09:05:36 INFO blockmanagement.BlockManager: maxNumBlocksToLog          = 1000
20/08/10 09:05:36 INFO namenode.FSNamesystem: fsOwner             = fegaras (auth:SIMPLE)
20/08/10 09:05:36 INFO namenode.FSNamesystem: supergroup          = supergroup
20/08/10 09:05:36 INFO namenode.FSNamesystem: isPermissionEnabled = true
20/08/10 09:05:36 INFO namenode.FSNamesystem: HA Enabled: false
20/08/10 09:05:36 INFO namenode.FSNamesystem: Append Enabled: true
20/08/10 09:05:36 INFO util.GSet: Computing capacity for map INodeMap
20/08/10 09:05:36 INFO util.GSet: VM type       = 64-bit
20/08/10 09:05:36 INFO util.GSet: 1.0% max memory 958.5 MB = 9.6 MB
20/08/10 09:05:36 INFO util.GSet: capacity      = 2^20 = 1048576 entries
20/08/10 09:05:36 INFO namenode.NameNode: Caching file names occuring more than 10 times
20/08/10 09:05:36 INFO util.GSet: Computing capacity for map cachedBlocks
20/08/10 09:05:36 INFO util.GSet: VM type       = 64-bit
20/08/10 09:05:36 INFO util.GSet: 0.25% max memory 958.5 MB = 2.4 MB
20/08/10 09:05:36 INFO util.GSet: capacity      = 2^18 = 262144 entries
20/08/10 09:05:36 INFO namenode.FSNamesystem: dfs.namenode.safemode.threshold-pct = 0.9990000128746033
20/08/10 09:05:36 INFO namenode.FSNamesystem: dfs.namenode.safemode.min.datanodes = 0
20/08/10 09:05:36 INFO namenode.FSNamesystem: dfs.namenode.safemode.extension     = 30000
20/08/10 09:05:36 INFO namenode.FSNamesystem: Retry cache on namenode is enabled
20/08/10 09:05:36 INFO namenode.FSNamesystem: Retry cache will use 0.03 of total heap and retry cache entry expiry time is 600000 millis
20/08/10 09:05:36 INFO util.GSet: Computing capacity for map NameNodeRetryCache
20/08/10 09:05:36 INFO util.GSet: VM type       = 64-bit
20/08/10 09:05:36 INFO util.GSet: 0.029999999329447746% max memory 958.5 MB = 294.5 KB
20/08/10 09:05:36 INFO util.GSet: capacity      = 2^15 = 32768 entries
20/08/10 09:05:36 INFO namenode.NNConf: ACLs enabled? false
20/08/10 09:05:36 INFO namenode.NNConf: XAttrs enabled? true
20/08/10 09:05:36 INFO namenode.NNConf: Maximum size of an xattr: 16384
20/08/10 09:05:36 INFO namenode.FSImage: Allocated new BlockPoolId: BP-859233011-198.202.113.31-1597075536732
20/08/10 09:05:36 INFO common.Storage: Storage directory /scratch/fegaras/35207014/namenode_data has been successfully formatted.
20/08/10 09:05:36 INFO namenode.NNStorageRetentionManager: Going to retain 1 images with txid >= 0
20/08/10 09:05:36 INFO util.ExitUtil: Exiting with status 0
20/08/10 09:05:36 INFO namenode.NameNode: SHUTDOWN_MSG: 
/************************************************************
SHUTDOWN_MSG: Shutting down NameNode at comet-17-09.sdsc.edu/198.202.113.31
************************************************************/
myHadoop:  
myHadoop: Enabling experimental Spark support
myHadoop: Using SPARK_CONF_DIR=/home/fegaras/cometcluster/spark
myHadoop:  
To use Spark, you will want to type the following commands:"
  source /home/fegaras/cometcluster/spark/spark-env.sh
  myspark start
Starting namenodes on [comet-17-09.ibnet]
comet-17-09.ibnet: starting namenode, logging to /scratch/fegaras/35207014/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.out
comet-17-09.ibnet: starting datanode, logging to /scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.out
comet-17-19.ibnet: starting datanode, logging to /scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-19.sdsc.edu.out
comet-17-23.ibnet: starting datanode, logging to /scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-23.sdsc.edu.out
comet-17-17.ibnet: starting datanode, logging to /scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-17.sdsc.edu.out
Starting secondary namenodes [comet-17-09.ibnet]
comet-17-09.ibnet: starting secondarynamenode, logging to /scratch/fegaras/35207014/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.out
starting org.apache.spark.deploy.master.Master, logging to /scratch/fegaras/35207014/logs/spark-fegaras-org.apache.spark.deploy.master.Master-1-comet-17-09.out
failed to launch: nice -n 0 /oasis/projects/nsf/uot143/fegaras/spark-3.0.0-bin-hadoop2.7/bin/spark-class org.apache.spark.deploy.master.Master --host comet-17-09.ibnet --port 7077 --webui-port 8080
full log in /scratch/fegaras/35207014/logs/spark-fegaras-org.apache.spark.deploy.master.Master-1-comet-17-09.out
comet-17-23.ibnet: starting org.apache.spark.deploy.worker.Worker, logging to /oasis/projects/nsf/uot143/fegaras/spark-3.0.0-bin-hadoop2.7/logs/spark-fegaras-org.apache.spark.deploy.worker.Worker-1-comet-17-23.sdsc.edu.out
comet-17-17.ibnet: starting org.apache.spark.deploy.worker.Worker, logging to /oasis/projects/nsf/uot143/fegaras/spark-3.0.0-bin-hadoop2.7/logs/spark-fegaras-org.apache.spark.deploy.worker.Worker-1-comet-17-17.sdsc.edu.out
comet-17-19.ibnet: starting org.apache.spark.deploy.worker.Worker, logging to /oasis/projects/nsf/uot143/fegaras/spark-3.0.0-bin-hadoop2.7/logs/spark-fegaras-org.apache.spark.deploy.worker.Worker-1-comet-17-19.sdsc.edu.out
comet-17-09.ibnet: starting org.apache.spark.deploy.worker.Worker, logging to /oasis/projects/nsf/uot143/fegaras/spark-3.0.0-bin-hadoop2.7/logs/spark-fegaras-org.apache.spark.deploy.worker.Worker-1-comet-17-09.sdsc.edu.out
compiling factorization.scala ...
Term:
Call(tiled,
     List(Tuple(List(Var(n), Var(m))),
          Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                        reduce(+, Var(v))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(k))),
                                                     VarPat(p))),
                                       Var(P)),
                             Generator(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                   VarPat(j))),
                                                     VarPat(q))),
                                       Var(Q)),
                             Predicate(MethodCall(Var(kk),
                                                  ==,
                                                  List(Var(k)))),
                             LetBinding(VarPat(v),
                                        MethodCall(Var(p),
                                                   *,
                                                   List(Var(q)))),
                             GroupByQual(TuplePat(List(VarPat(i),
                                                       VarPat(j))),
                                         Tuple(List(Var(i), Var(j))))))))
Lifted term:
Call(tiled,
     List(Tuple(List(Var(n), Var(m))),
          Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                        reduce(+, Var(v))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(k))),
                                                     VarPat(p))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v5),
                                                                                          Var(v6))),
                                                                               MapAccess(Var(v4),
                                                                                         Tuple(List(MethodCall(Var(v5),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v6),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v7),
                                                                                             VarPat(v8),
                                                                                             VarPat(v3))),
                                                                               Var(P)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v1),
                                                                                                          VarPat(v2))),
                                                                                            VarPat(v4))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v3),
                                                                                        Var(v3)))),
                                                                    Generator(VarPat(v5),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v7)))),
                                                                    Generator(VarPat(v6),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v8)))),
                                                                    Predicate(MethodCall(Var(v1),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v5),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v2),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v6),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(P)))),
                             Generator(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                   VarPat(j))),
                                                     VarPat(q))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v13),
                                                                                          Var(v14))),
                                                                               MapAccess(Var(v12),
                                                                                         Tuple(List(MethodCall(Var(v13),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v14),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v15),
                                                                                             VarPat(v16),
                                                                                             VarPat(v11))),
                                                                               Var(Q)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v9),
                                                                                                          VarPat(v10))),
                                                                                            VarPat(v12))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v11),
                                                                                        Var(v11)))),
                                                                    Generator(VarPat(v13),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v15)))),
                                                                    Generator(VarPat(v14),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v16)))),
                                                                    Predicate(MethodCall(Var(v9),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v13),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v10),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v14),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(Q)))),
                             Predicate(MethodCall(Var(kk),
                                                  ==,
                                                  List(Var(k)))),
                             LetBinding(VarPat(v),
                                        MethodCall(Var(p),
                                                   *,
                                                   List(Var(q)))),
                             GroupByQual(TuplePat(List(VarPat(i),
                                                       VarPat(j))),
                                         Tuple(List(Var(i), Var(j))))))))
Translated comprehension:
Tuple(List(Var(n),
           Var(m),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                         Block(List(VarDecl(v24,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_p))),
                                                                                 Var(__p)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_q))),
                                                                                 Var(__q)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                             VarPat(k))),
                                                                                               VarPat(p))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v17),
                                                                                                                          Var(v18))),
                                                                                                               MapAccess(Var(_p),
                                                                                                                         MethodCall(MethodCall(Var(v17),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v18))))))),
                                                                                               List(Generator(VarPat(v17),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v18),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                                                             VarPat(j))),
                                                                                               VarPat(q))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v19),
                                                                                                                          Var(v20))),
                                                                                                               MapAccess(Var(_q),
                                                                                                                         MethodCall(MethodCall(Var(v19),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v20))))))),
                                                                                               List(Generator(VarPat(v19),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v20),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Predicate(MethodCall(Var(kk),
                                                                                            ==,
                                                                                            List(Var(k)))),
                                                                       LetBinding(VarPat(v),
                                                                                  MethodCall(Var(p),
                                                                                             *,
                                                                                             List(Var(q)))),
                                                                       LetBinding(TuplePat(List(VarPat(v25),
                                                                                                VarPat(v26))),
                                                                                  Tuple(List(Var(i),
                                                                                             Var(j)))),
                                                                       AssignQual(MapAccess(Var(v24),
                                                                                            MethodCall(MethodCall(Var(v25),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v26)))),
                                                                                  MethodCall(MapAccess(Var(v24),
                                                                                                       MethodCall(MethodCall(Var(v25),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v26)))),
                                                                                             +,
                                                                                             List(Var(v)))))),
                                                    Var(v24)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(j))),
                                                      TuplePat(List(VarPat(__p),
                                                                    VarPat(__q))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(i),
                                                                                            Var(v21))),
                                                                                 Tuple(List(Tuple(List(Var(k))),
                                                                                            Var(v22)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(k))),
                                                                                              VarPat(v22))),
                                                                                Nth(Var(P),
                                                                                    3)),
                                                                      Generator(VarPat(v21),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(n),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v21),
                                                                                                 Var(j))),
                                                                                      Tuple(List(Tuple(List(Var(kk))),
                                                                                                 Var(v23)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                                                                 VarPat(j))),
                                                                                                   VarPat(v23))),
                                                                                     Nth(Var(Q),
                                                                                         3)),
                                                                           Generator(VarPat(v21),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(m),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Normalized comprehension:
Tuple(List(Var(n),
           Var(m),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                         Block(List(VarDecl(v24,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_p))),
                                                                                 Var(__p)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_q))),
                                                                                 Var(__q)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(VarPat(v28),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v29),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v30),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v31),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Predicate(MethodCall(Var(v30),
                                                                                            ==,
                                                                                            List(Var(v29)))),
                                                                       AssignQual(MapAccess(Var(v24),
                                                                                            MethodCall(MethodCall(Var(v28),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v31)))),
                                                                                  MethodCall(MapAccess(Var(v24),
                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v31)))),
                                                                                             +,
                                                                                             List(MethodCall(MapAccess(Var(_p),
                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                             *,
                                                                                                                                             List(IntConst(1000))),
                                                                                                                                  +,
                                                                                                                                  List(Var(v29)))),
                                                                                                             *,
                                                                                                             List(MapAccess(Var(_q),
                                                                                                                            MethodCall(MethodCall(Var(v30),
                                                                                                                                                  *,
                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                       +,
                                                                                                                                       List(Var(v31))))))))))),
                                                    Var(v24)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(j))),
                                                      TuplePat(List(VarPat(__p),
                                                                    VarPat(__q))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(i),
                                                                                            Var(v21))),
                                                                                 Tuple(List(Tuple(List(Var(k))),
                                                                                            Var(v22)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(k))),
                                                                                              VarPat(v22))),
                                                                                Nth(Var(P),
                                                                                    3)),
                                                                      Generator(VarPat(v21),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(n),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v21),
                                                                                                 Var(j))),
                                                                                      Tuple(List(Tuple(List(Var(kk))),
                                                                                                 Var(v23)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                                                                 VarPat(j))),
                                                                                                   VarPat(v23))),
                                                                                     Nth(Var(Q),
                                                                                         3)),
                                                                           Generator(VarPat(v21),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(m),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Optimized comprehension:
Tuple(List(Var(n),
           Var(m),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                         Block(List(VarDecl(v24,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_p))),
                                                                                 Var(__p)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_q))),
                                                                                 Var(__q)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(VarPat(v28),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v29),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v31),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       AssignQual(MapAccess(Var(v24),
                                                                                            MethodCall(MethodCall(Var(v28),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v31)))),
                                                                                  MethodCall(MapAccess(Var(v24),
                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v31)))),
                                                                                             +,
                                                                                             List(MethodCall(MapAccess(Var(_p),
                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                             *,
                                                                                                                                             List(IntConst(1000))),
                                                                                                                                  +,
                                                                                                                                  List(Var(v29)))),
                                                                                                             *,
                                                                                                             List(MapAccess(Var(_q),
                                                                                                                            MethodCall(MethodCall(Var(v29),
                                                                                                                                                  *,
                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                       +,
                                                                                                                                       List(Var(v31))))))))))),
                                                    Var(v24)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(j))),
                                                      TuplePat(List(VarPat(__p),
                                                                    VarPat(__q))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(i),
                                                                                            Var(v21))),
                                                                                 Tuple(List(Tuple(List(Var(k))),
                                                                                            Var(v22)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(k))),
                                                                                              VarPat(v22))),
                                                                                Nth(Var(P),
                                                                                    3)),
                                                                      Generator(VarPat(v21),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(n),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v21),
                                                                                                 Var(j))),
                                                                                      Tuple(List(Tuple(List(Var(kk))),
                                                                                                 Var(v23)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                                                                 VarPat(j))),
                                                                                                   VarPat(v23))),
                                                                                     Nth(Var(Q),
                                                                                         3)),
                                                                           Generator(VarPat(v21),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(m),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Final Translated term:
Tuple(List(Var(n),
           Var(m),
           flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                      VarPat(j))),
                                        TuplePat(List(VarPat(__p),
                                                      VarPat(__q))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                              Var(j))),
                                                   Block(List(VarDecl(v24,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(TuplePat(List(VarPat(k1),
                                                                                             VarPat(_p))),
                                                                               Call(foreach,
                                                                                    List(Lambda(TuplePat(List(VarPat(k2),
                                                                                                              VarPat(_q))),
                                                                                                IfE(MethodCall(Var(k1),
                                                                                                               ==,
                                                                                                               List(Var(k2))),
                                                                                                    Call(foreach,
                                                                                                         List(Lambda(VarPat(v28),
                                                                                                                     Call(foreach,
                                                                                                                          List(Lambda(VarPat(v29),
                                                                                                                                      Call(foreach,
                                                                                                                                           List(Lambda(VarPat(v31),
                                                                                                                                                       Block(List(MethodCall(MapAccess(Var(v24),
                                                                                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                  +,
                                                                                                                                                                                                  List(Var(v31)))),
                                                                                                                                                                             =,
                                                                                                                                                                             List(MethodCall(MapAccess(Var(v24),
                                                                                                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                  List(Var(v31)))),
                                                                                                                                                                                             +,
                                                                                                                                                                                             List(MethodCall(MapAccess(Var(_p),
                                                                                                                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                                  List(Var(v29)))),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(MapAccess(Var(_q),
                                                                                                                                                                                                                            MethodCall(MethodCall(Var(v29),
                                                                                                                                                                                                                                                  *,
                                                                                                                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                                                                                                                       +,
                                                                                                                                                                                                                                       List(Var(v31))))))))))))),
                                                                                                                                                MethodCall(IntConst(0),
                                                                                                                                                           until,
                                                                                                                                                           List(IntConst(1000)))))),
                                                                                                                               MethodCall(IntConst(0),
                                                                                                                                          until,
                                                                                                                                          List(IntConst(1000)))))),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))),
                                                                                                    Block(List()))),
                                                                                         Var(__q)))),
                                                                        Var(__p))),
                                                              Var(v24)))))))),
                   MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                         VarPat(k))),
                                                           VarPat(v22))),
                                             flatMap(Lambda(VarPat(v21),
                                                            Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                Var(v21))),
                                                                                     Tuple(List(Tuple(List(Var(k))),
                                                                                                Var(v22)))))))),
                                                     MethodCall(IntConst(0),
                                                                until,
                                                                List(MethodCall(MethodCall(Var(n),
                                                                                           +,
                                                                                           List(IntConst(999))),
                                                                                /,
                                                                                List(IntConst(1000))))))),
                                      Nth(Var(P), 3)),
                              cogroup,
                              List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                              VarPat(j))),
                                                                VarPat(v23))),
                                                  flatMap(Lambda(VarPat(v21),
                                                                 Sequence(List(Tuple(List(Tuple(List(Var(v21),
                                                                                                     Var(j))),
                                                                                          Tuple(List(Tuple(List(Var(kk))),
                                                                                                     Var(v23)))))))),
                                                          MethodCall(IntConst(0),
                                                                     until,
                                                                     List(MethodCall(MethodCall(Var(m),
                                                                                                +,
                                                                                                List(IntConst(999))),
                                                                                     /,
                                                                                     List(IntConst(1000))))))),
                                           Nth(Var(Q), 3)))))))
Parallelized term:
Tuple(List(Var(n),
           Var(m),
           flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                      VarPat(j))),
                                        TuplePat(List(VarPat(__p),
                                                      VarPat(__q))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                              Var(j))),
                                                   Block(List(VarDecl(v24,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(TuplePat(List(VarPat(k1),
                                                                                             VarPat(_p))),
                                                                               Call(foreach,
                                                                                    List(Lambda(TuplePat(List(VarPat(k2),
                                                                                                              VarPat(_q))),
                                                                                                IfE(MethodCall(Var(k1),
                                                                                                               ==,
                                                                                                               List(Var(k2))),
                                                                                                    Call(foreach,
                                                                                                         List(Lambda(VarPat(v28),
                                                                                                                     Call(foreach,
                                                                                                                          List(Lambda(VarPat(v29),
                                                                                                                                      Call(foreach,
                                                                                                                                           List(Lambda(VarPat(v31),
                                                                                                                                                       Block(List(MethodCall(MapAccess(Var(v24),
                                                                                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                  +,
                                                                                                                                                                                                  List(Var(v31)))),
                                                                                                                                                                             =,
                                                                                                                                                                             List(MethodCall(MapAccess(Var(v24),
                                                                                                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                  List(Var(v31)))),
                                                                                                                                                                                             +,
                                                                                                                                                                                             List(MethodCall(MapAccess(Var(_p),
                                                                                                                                                                                                                       MethodCall(MethodCall(Var(v28),
                                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                                  List(Var(v29)))),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(MapAccess(Var(_q),
                                                                                                                                                                                                                            MethodCall(MethodCall(Var(v29),
                                                                                                                                                                                                                                                  *,
                                                                                                                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                                                                                                                       +,
                                                                                                                                                                                                                                       List(Var(v31))))))))))))),
                                                                                                                                                MethodCall(IntConst(0),
                                                                                                                                                           until,
                                                                                                                                                           List(IntConst(1000)))))),
                                                                                                                               MethodCall(IntConst(0),
                                                                                                                                          until,
                                                                                                                                          List(IntConst(1000)))))),
                                                                                                              MethodCall(MethodCall(IntConst(0),
                                                                                                                                    until,
                                                                                                                                    List(IntConst(1000))),
                                                                                                                         par,
                                                                                                                         null))),
                                                                                                    Block(List()))),
                                                                                         Var(__q)))),
                                                                        Var(__p))),
                                                              Var(v24)))))))),
                   MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                         VarPat(k))),
                                                           VarPat(v22))),
                                             MethodCall(flatMap(Lambda(VarPat(v21),
                                                                       Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                           Var(v21))),
                                                                                                Tuple(List(Tuple(List(Var(k))),
                                                                                                           Var(v22)))))))),
                                                                MethodCall(MethodCall(IntConst(0),
                                                                                      until,
                                                                                      List(MethodCall(MethodCall(Var(n),
                                                                                                                 +,
                                                                                                                 List(IntConst(999))),
                                                                                                      /,
                                                                                                      List(IntConst(1000))))),
                                                                           par,
                                                                           null)),
                                                        toList,
                                                        null)),
                                      Nth(Var(P), 3)),
                              cogroup,
                              List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(kk),
                                                                              VarPat(j))),
                                                                VarPat(v23))),
                                                  MethodCall(flatMap(Lambda(VarPat(v21),
                                                                            Sequence(List(Tuple(List(Tuple(List(Var(v21),
                                                                                                                Var(j))),
                                                                                                     Tuple(List(Tuple(List(Var(kk))),
                                                                                                                Var(v23)))))))),
                                                                     MethodCall(MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(m),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000))))),
                                                                                par,
                                                                                null)),
                                                             toList,
                                                             null)),
                                           Nth(Var(Q), 3)))))))
Scala code:
scala.Tuple3(n, m, P._3.flatMap(((x$macro$7: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$7 match {
  case scala.Tuple2(scala.Tuple2((i @ _), (k @ _)), (v22 @ _)) => 0.until(n.+(999)./(1000)).par.map(((x$macro$9: Int) => x$macro$9 match {
  case (v21 @ _) => scala.Tuple2(scala.Tuple2(i, v21), scala.Tuple2(k, v22))
})).toList
})).cogroup(Q._3.flatMap(((x$macro$10: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$10 match {
  case scala.Tuple2(scala.Tuple2((kk @ _), (j @ _)), (v23 @ _)) => 0.until(m.+(999)./(1000)).par.map(((x$macro$12: Int) => x$macro$12 match {
  case (v21 @ _) => scala.Tuple2(scala.Tuple2(v21, j), scala.Tuple2(kk, v23))
})).toList
}))).map(((x$macro$13: scala.Tuple2[scala.Tuple2[Int, Int], scala.Tuple2[Iterable[scala.Tuple2[Int, Array[Double]]], Iterable[scala.Tuple2[Int, Array[Double]]]]]) => x$macro$13 match {
  case scala.Tuple2(scala.Tuple2((i @ _), (j @ _)), scala.Tuple2((__p @ _), (__q @ _))) => scala.Tuple2(scala.Tuple2(i, j), {
    val v24 = Array.ofDim[Double](1000000);
    __p.foreach(((x$macro$17: scala.Tuple2[Int, Array[Double]]) => (x$macro$17 match {
      case scala.Tuple2((k1 @ _), (_p @ _)) => __q.foreach(((x$macro$21: scala.Tuple2[Int, Array[Double]]) => (x$macro$21 match {
        case scala.Tuple2((k2 @ _), (_q @ _)) => if (k1.==(k2))
          0.until(1000).par.foreach(((v28: Int) => 0.until(1000).foreach(((v29: Int) => 0.until(1000).foreach(((v31: Int) => v24.update(v28.*(1000).+(v31), v24(v28.*(1000).+(v31)).+(_p(v28.*(1000).+(v29)).*(_q(v29.*(1000).+(v31)))))))))))
        else
          ()
      })))
    })));
    v24
  })
})))
Scala type: scala.Tuple3[Int, Int, org.apache.spark.rdd.RDD[scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]]]
Term:
Call(tiled,
     List(Tuple(List(Var(n), Var(m))),
          Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                        MethodCall(Var(r),
                                                   -,
                                                   List(Var(v)))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(j))),
                                                     VarPat(r))),
                                       Var(RR)),
                             Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                   VarPat(jj))),
                                                     VarPat(v))),
                                       Var(E2)),
                             Predicate(MethodCall(Var(ii),
                                                  ==,
                                                  List(Var(i)))),
                             Predicate(MethodCall(Var(jj),
                                                  ==,
                                                  List(Var(j)))),
                             Predicate(MethodCall(Var(r),
                                                  >,
                                                  List(DoubleConst(0.0))))))))
Lifted term:
Call(tiled,
     List(Tuple(List(Var(n), Var(m))),
          Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                        MethodCall(Var(r),
                                                   -,
                                                   List(Var(v)))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(j))),
                                                     VarPat(r))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v36),
                                                                                          Var(v37))),
                                                                               MapAccess(Var(v35),
                                                                                         Tuple(List(MethodCall(Var(v36),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v37),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v38),
                                                                                             VarPat(v39),
                                                                                             VarPat(v34))),
                                                                               Var(RR)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v32),
                                                                                                          VarPat(v33))),
                                                                                            VarPat(v35))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v34),
                                                                                        Var(v34)))),
                                                                    Generator(VarPat(v36),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v38)))),
                                                                    Generator(VarPat(v37),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v39)))),
                                                                    Predicate(MethodCall(Var(v32),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v36),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v33),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v37),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(RR)))),
                             Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                   VarPat(jj))),
                                                     VarPat(v))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v44),
                                                                                          Var(v45))),
                                                                               MapAccess(Var(v43),
                                                                                         Tuple(List(MethodCall(Var(v44),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v45),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v46),
                                                                                             VarPat(v47),
                                                                                             VarPat(v42))),
                                                                               Var(E2)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v40),
                                                                                                          VarPat(v41))),
                                                                                            VarPat(v43))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v42),
                                                                                        Var(v42)))),
                                                                    Generator(VarPat(v44),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v46)))),
                                                                    Generator(VarPat(v45),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v47)))),
                                                                    Predicate(MethodCall(Var(v40),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v44),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v41),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v45),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(E2)))),
                             Predicate(MethodCall(Var(ii),
                                                  ==,
                                                  List(Var(i)))),
                             Predicate(MethodCall(Var(jj),
                                                  ==,
                                                  List(Var(j)))),
                             Predicate(MethodCall(Var(r),
                                                  >,
                                                  List(DoubleConst(0.0))))))))
Translated comprehension:
Tuple(List(Var(n),
           Var(m),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                         Block(List(VarDecl(v52,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                             VarPat(j))),
                                                                                               VarPat(r))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v48),
                                                                                                                          Var(v49))),
                                                                                                               MapAccess(Var(_r),
                                                                                                                         MethodCall(MethodCall(Var(v48),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v49))))))),
                                                                                               List(Generator(VarPat(v48),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v49),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                             VarPat(jj))),
                                                                                               VarPat(v))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v50),
                                                                                                                          Var(v51))),
                                                                                                               MapAccess(Var(_v),
                                                                                                                         MethodCall(MethodCall(Var(v50),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v51))))))),
                                                                                               List(Generator(VarPat(v50),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v51),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Predicate(MethodCall(Var(ii),
                                                                                            ==,
                                                                                            List(Var(i)))),
                                                                       Predicate(MethodCall(Var(jj),
                                                                                            ==,
                                                                                            List(Var(j)))),
                                                                       Predicate(MethodCall(Var(r),
                                                                                            >,
                                                                                            List(DoubleConst(0.0)))),
                                                                       LetBinding(TuplePat(List(TuplePat(List(VarPat(v53),
                                                                                                              VarPat(v54))),
                                                                                                VarPat(v55))),
                                                                                  Tuple(List(Tuple(List(Var(i),
                                                                                                        Var(j))),
                                                                                             MethodCall(Var(r),
                                                                                                        -,
                                                                                                        List(Var(v)))))),
                                                                       AssignQual(MapAccess(Var(v52),
                                                                                            MethodCall(MethodCall(Var(v53),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v54)))),
                                                                                  Var(v55)))),
                                                    Var(v52)))))),
                         List(Generator(TuplePat(List(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                  VarPat(j))),
                                                                    VarPat(_r))),
                                                      TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                  VarPat(jj))),
                                                                    VarPat(_v))))),
                                        flatMap(Lambda(TuplePat(List(VarPat(_k),
                                                                     VarPat(x))),
                                                       Sequence(List(Var(x)))),
                                                MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                      VarPat(j))),
                                                                                        VarPat(_r))),
                                                                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                              Var(j))),
                                                                                                   Tuple(List(Tuple(List(Var(i),
                                                                                                                         Var(j))),
                                                                                                              Var(_r)))))))),
                                                                   Nth(Var(RR),
                                                                       3)),
                                                           join,
                                                           List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                           VarPat(jj))),
                                                                                             VarPat(_v))),
                                                                               Sequence(List(Tuple(List(Tuple(List(Var(ii),
                                                                                                                   Var(jj))),
                                                                                                        Tuple(List(Tuple(List(Var(ii),
                                                                                                                              Var(jj))),
                                                                                                                   Var(_v)))))))),
                                                                        Nth(Var(E2),
                                                                            3))))))))))
Normalized comprehension:
Tuple(List(Var(n),
           Var(m),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                         Block(List(VarDecl(v52,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(VarPat(v56),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v57),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v58),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v59),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Predicate(MethodCall(Var(v58),
                                                                                            ==,
                                                                                            List(Var(v56)))),
                                                                       Predicate(MethodCall(Var(v59),
                                                                                            ==,
                                                                                            List(Var(v57)))),
                                                                       Predicate(MethodCall(MapAccess(Var(_r),
                                                                                                      MethodCall(MethodCall(Var(v56),
                                                                                                                            *,
                                                                                                                            List(IntConst(1000))),
                                                                                                                 +,
                                                                                                                 List(Var(v57)))),
                                                                                            >,
                                                                                            List(DoubleConst(0.0)))),
                                                                       AssignQual(MapAccess(Var(v52),
                                                                                            MethodCall(MethodCall(Var(v56),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v57)))),
                                                                                  MethodCall(MapAccess(Var(_r),
                                                                                                       MethodCall(MethodCall(Var(v56),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v57)))),
                                                                                             -,
                                                                                             List(MapAccess(Var(_v),
                                                                                                            MethodCall(MethodCall(Var(v58),
                                                                                                                                  *,
                                                                                                                                  List(IntConst(1000))),
                                                                                                                       +,
                                                                                                                       List(Var(v59))))))))),
                                                    Var(v52)))))),
                         List(Generator(TuplePat(List(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                  VarPat(j))),
                                                                    VarPat(_r))),
                                                      TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                  VarPat(jj))),
                                                                    VarPat(_v))))),
                                        flatMap(Lambda(TuplePat(List(VarPat(_k),
                                                                     VarPat(x))),
                                                       Sequence(List(Var(x)))),
                                                MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                      VarPat(j))),
                                                                                        VarPat(_r))),
                                                                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                              Var(j))),
                                                                                                   Tuple(List(Tuple(List(Var(i),
                                                                                                                         Var(j))),
                                                                                                              Var(_r)))))))),
                                                                   Nth(Var(RR),
                                                                       3)),
                                                           join,
                                                           List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                           VarPat(jj))),
                                                                                             VarPat(_v))),
                                                                               Sequence(List(Tuple(List(Tuple(List(Var(ii),
                                                                                                                   Var(jj))),
                                                                                                        Tuple(List(Tuple(List(Var(ii),
                                                                                                                              Var(jj))),
                                                                                                                   Var(_v)))))))),
                                                                        Nth(Var(E2),
                                                                            3))))))))))
Optimized comprehension:
Tuple(List(Var(n),
           Var(m),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(j))),
                                         Block(List(VarDecl(v52,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(VarPat(v56),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v57),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Predicate(MethodCall(MapAccess(Var(_r),
                                                                                                      MethodCall(MethodCall(Var(v56),
                                                                                                                            *,
                                                                                                                            List(IntConst(1000))),
                                                                                                                 +,
                                                                                                                 List(Var(v57)))),
                                                                                            >,
                                                                                            List(DoubleConst(0.0)))),
                                                                       AssignQual(MapAccess(Var(v52),
                                                                                            MethodCall(MethodCall(Var(v56),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v57)))),
                                                                                  MethodCall(MapAccess(Var(_r),
                                                                                                       MethodCall(MethodCall(Var(v56),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v57)))),
                                                                                             -,
                                                                                             List(MapAccess(Var(_v),
                                                                                                            MethodCall(MethodCall(Var(v56),
                                                                                                                                  *,
                                                                                                                                  List(IntConst(1000))),
                                                                                                                       +,
                                                                                                                       List(Var(v57))))))))),
                                                    Var(v52)))))),
                         List(Generator(TuplePat(List(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                  VarPat(j))),
                                                                    VarPat(_r))),
                                                      TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                  VarPat(jj))),
                                                                    VarPat(_v))))),
                                        flatMap(Lambda(TuplePat(List(VarPat(_k),
                                                                     VarPat(x))),
                                                       Sequence(List(Var(x)))),
                                                MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                      VarPat(j))),
                                                                                        VarPat(_r))),
                                                                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                              Var(j))),
                                                                                                   Tuple(List(Tuple(List(Var(i),
                                                                                                                         Var(j))),
                                                                                                              Var(_r)))))))),
                                                                   Nth(Var(RR),
                                                                       3)),
                                                           join,
                                                           List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                           VarPat(jj))),
                                                                                             VarPat(_v))),
                                                                               Sequence(List(Tuple(List(Tuple(List(Var(ii),
                                                                                                                   Var(jj))),
                                                                                                        Tuple(List(Tuple(List(Var(ii),
                                                                                                                              Var(jj))),
                                                                                                                   Var(_v)))))))),
                                                                        Nth(Var(E2),
                                                                            3))))))))))
Final Translated term:
Tuple(List(Var(n),
           Var(m),
           flatMap(Lambda(TuplePat(List(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(j))),
                                                      VarPat(_r))),
                                        TuplePat(List(TuplePat(List(VarPat(ii),
                                                                    VarPat(jj))),
                                                      VarPat(_v))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                              Var(j))),
                                                   Block(List(VarDecl(v52,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(VarPat(v56),
                                                                               Call(foreach,
                                                                                    List(Lambda(VarPat(v57),
                                                                                                IfE(MethodCall(MapAccess(Var(_r),
                                                                                                                         MethodCall(MethodCall(Var(v56),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v57)))),
                                                                                                               >,
                                                                                                               List(DoubleConst(0.0))),
                                                                                                    Block(List(MethodCall(MapAccess(Var(v52),
                                                                                                                                    MethodCall(MethodCall(Var(v56),
                                                                                                                                                          *,
                                                                                                                                                          List(IntConst(1000))),
                                                                                                                                               +,
                                                                                                                                               List(Var(v57)))),
                                                                                                                          =,
                                                                                                                          List(MethodCall(MapAccess(Var(_r),
                                                                                                                                                    MethodCall(MethodCall(Var(v56),
                                                                                                                                                                          *,
                                                                                                                                                                          List(IntConst(1000))),
                                                                                                                                                               +,
                                                                                                                                                               List(Var(v57)))),
                                                                                                                                          -,
                                                                                                                                          List(MapAccess(Var(_v),
                                                                                                                                                         MethodCall(MethodCall(Var(v56),
                                                                                                                                                                               *,
                                                                                                                                                                               List(IntConst(1000))),
                                                                                                                                                                    +,
                                                                                                                                                                    List(Var(v57)))))))))),
                                                                                                    Block(List()))),
                                                                                         MethodCall(IntConst(0),
                                                                                                    until,
                                                                                                    List(IntConst(1000)))))),
                                                                        MethodCall(IntConst(0),
                                                                                   until,
                                                                                   List(IntConst(1000))))),
                                                              Var(v52)))))))),
                   flatMap(Lambda(TuplePat(List(VarPat(_k), VarPat(x))),
                                  Sequence(List(Var(x)))),
                           MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                 VarPat(j))),
                                                                   VarPat(_r))),
                                                     Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                         Var(j))),
                                                                              Tuple(List(Tuple(List(Var(i),
                                                                                                    Var(j))),
                                                                                         Var(_r)))))))),
                                              Nth(Var(RR), 3)),
                                      join,
                                      List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                      VarPat(jj))),
                                                                        VarPat(_v))),
                                                          Sequence(List(Tuple(List(Tuple(List(Var(ii),
                                                                                              Var(jj))),
                                                                                   Tuple(List(Tuple(List(Var(ii),
                                                                                                         Var(jj))),
                                                                                              Var(_v)))))))),
                                                   Nth(Var(E2), 3))))))))
Parallelized term:
Tuple(List(Var(n),
           Var(m),
           flatMap(Lambda(TuplePat(List(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(j))),
                                                      VarPat(_r))),
                                        TuplePat(List(TuplePat(List(VarPat(ii),
                                                                    VarPat(jj))),
                                                      VarPat(_v))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                              Var(j))),
                                                   Block(List(VarDecl(v52,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(VarPat(v56),
                                                                               Call(foreach,
                                                                                    List(Lambda(VarPat(v57),
                                                                                                IfE(MethodCall(MapAccess(Var(_r),
                                                                                                                         MethodCall(MethodCall(Var(v56),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v57)))),
                                                                                                               >,
                                                                                                               List(DoubleConst(0.0))),
                                                                                                    Block(List(MethodCall(MapAccess(Var(v52),
                                                                                                                                    MethodCall(MethodCall(Var(v56),
                                                                                                                                                          *,
                                                                                                                                                          List(IntConst(1000))),
                                                                                                                                               +,
                                                                                                                                               List(Var(v57)))),
                                                                                                                          =,
                                                                                                                          List(MethodCall(MapAccess(Var(_r),
                                                                                                                                                    MethodCall(MethodCall(Var(v56),
                                                                                                                                                                          *,
                                                                                                                                                                          List(IntConst(1000))),
                                                                                                                                                               +,
                                                                                                                                                               List(Var(v57)))),
                                                                                                                                          -,
                                                                                                                                          List(MapAccess(Var(_v),
                                                                                                                                                         MethodCall(MethodCall(Var(v56),
                                                                                                                                                                               *,
                                                                                                                                                                               List(IntConst(1000))),
                                                                                                                                                                    +,
                                                                                                                                                                    List(Var(v57)))))))))),
                                                                                                    Block(List()))),
                                                                                         MethodCall(IntConst(0),
                                                                                                    until,
                                                                                                    List(IntConst(1000)))))),
                                                                        MethodCall(MethodCall(IntConst(0),
                                                                                              until,
                                                                                              List(IntConst(1000))),
                                                                                   par,
                                                                                   null))),
                                                              Var(v52)))))))),
                   flatMap(Lambda(TuplePat(List(VarPat(_k), VarPat(x))),
                                  Sequence(List(Var(x)))),
                           MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                 VarPat(j))),
                                                                   VarPat(_r))),
                                                     Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                         Var(j))),
                                                                              Tuple(List(Tuple(List(Var(i),
                                                                                                    Var(j))),
                                                                                         Var(_r)))))))),
                                              Nth(Var(RR), 3)),
                                      join,
                                      List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                      VarPat(jj))),
                                                                        VarPat(_v))),
                                                          Sequence(List(Tuple(List(Tuple(List(Var(ii),
                                                                                              Var(jj))),
                                                                                   Tuple(List(Tuple(List(Var(ii),
                                                                                                         Var(jj))),
                                                                                              Var(_v)))))))),
                                                   Nth(Var(E2), 3))))))))
Scala code:
scala.Tuple3(n, m, RR._3.map(((x$macro$164: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$164 match {
  case scala.Tuple2(scala.Tuple2((i @ _), (j @ _)), (_r @ _)) => scala.Tuple2(scala.Tuple2(i, j), scala.Tuple2(scala.Tuple2(i, j), _r))
})).join(E2._3.map(((x$macro$165: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$165 match {
  case scala.Tuple2(scala.Tuple2((ii @ _), (jj @ _)), (_v @ _)) => scala.Tuple2(scala.Tuple2(ii, jj), scala.Tuple2(scala.Tuple2(ii, jj), _v))
}))).map(((x$macro$166: scala.Tuple2[scala.Tuple2[Int, Int], scala.Tuple2[scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]], scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]]]) => x$macro$166 match {
  case scala.Tuple2((_k @ _), (x @ _)) => x
})).map(((x$macro$167: scala.Tuple2[scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]], scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]]) => x$macro$167 match {
  case scala.Tuple2(scala.Tuple2(scala.Tuple2((i @ _), (j @ _)), (_r @ _)), scala.Tuple2(scala.Tuple2((ii @ _), (jj @ _)), (_v @ _))) => scala.Tuple2(scala.Tuple2(i, j), {
    val v52 = Array.ofDim[Double](1000000);
    0.until(1000).par.foreach(((v56: Int) => 0.until(1000).foreach(((v57: Int) => if (_r(v56.*(1000).+(v57)).>(0.0))
      v52.update(v56.*(1000).+(v57), _r(v56.*(1000).+(v57)).-(_v(v56.*(1000).+(v57))))
    else
      ()))));
    v52
  })
})))
Scala type: scala.Tuple3[Int, Int, org.apache.spark.rdd.RDD[scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]]]
Term:
Call(tiled,
     List(Tuple(List(Var(n), Var(d))),
          Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(k))),
                                        reduce(^, Var(v))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(j))),
                                                     VarPat(e))),
                                       Var(E)),
                             Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                   VarPat(jj))),
                                                     VarPat(q))),
                                       Var(Q)),
                             Predicate(MethodCall(Var(jj),
                                                  ==,
                                                  List(Var(j)))),
                             LetBinding(VarPat(v),
                                        MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                         *,
                                                                         List(DoubleConst(0.002))),
                                                              *,
                                                              List(Var(e))),
                                                   *,
                                                   List(Var(q)))),
                             GroupByQual(TuplePat(List(VarPat(i),
                                                       VarPat(k))),
                                         Tuple(List(Var(i), Var(k))))))))
Lifted term:
Call(tiled,
     List(Tuple(List(Var(n), Var(d))),
          Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(k))),
                                        reduce(^, Var(v))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(j))),
                                                     VarPat(e))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v64),
                                                                                          Var(v65))),
                                                                               MapAccess(Var(v63),
                                                                                         Tuple(List(MethodCall(Var(v64),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v65),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v66),
                                                                                             VarPat(v67),
                                                                                             VarPat(v62))),
                                                                               Var(E)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v60),
                                                                                                          VarPat(v61))),
                                                                                            VarPat(v63))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v62),
                                                                                        Var(v62)))),
                                                                    Generator(VarPat(v64),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v66)))),
                                                                    Generator(VarPat(v65),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v67)))),
                                                                    Predicate(MethodCall(Var(v60),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v64),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v61),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v65),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(E)))),
                             Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                   VarPat(jj))),
                                                     VarPat(q))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v72),
                                                                                          Var(v73))),
                                                                               MapAccess(Var(v71),
                                                                                         Tuple(List(MethodCall(Var(v72),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v73),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v74),
                                                                                             VarPat(v75),
                                                                                             VarPat(v70))),
                                                                               Var(Q)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v68),
                                                                                                          VarPat(v69))),
                                                                                            VarPat(v71))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v70),
                                                                                        Var(v70)))),
                                                                    Generator(VarPat(v72),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v74)))),
                                                                    Generator(VarPat(v73),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v75)))),
                                                                    Predicate(MethodCall(Var(v68),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v72),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v69),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v73),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(Q)))),
                             Predicate(MethodCall(Var(jj),
                                                  ==,
                                                  List(Var(j)))),
                             LetBinding(VarPat(v),
                                        MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                         *,
                                                                         List(DoubleConst(0.002))),
                                                              *,
                                                              List(Var(e))),
                                                   *,
                                                   List(Var(q)))),
                             GroupByQual(TuplePat(List(VarPat(i),
                                                       VarPat(k))),
                                         Tuple(List(Var(i), Var(k))))))))
Translated comprehension:
Tuple(List(Var(n),
           Var(d),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(k))),
                                         Block(List(VarDecl(v83,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_e))),
                                                                                 Var(__e)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_q))),
                                                                                 Var(__q)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                             VarPat(j))),
                                                                                               VarPat(e))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v76),
                                                                                                                          Var(v77))),
                                                                                                               MapAccess(Var(_e),
                                                                                                                         MethodCall(MethodCall(Var(v76),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v77))))))),
                                                                                               List(Generator(VarPat(v76),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v77),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                                                             VarPat(jj))),
                                                                                               VarPat(q))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v78),
                                                                                                                          Var(v79))),
                                                                                                               MapAccess(Var(_q),
                                                                                                                         MethodCall(MethodCall(Var(v78),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v79))))))),
                                                                                               List(Generator(VarPat(v78),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v79),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Predicate(MethodCall(Var(jj),
                                                                                            ==,
                                                                                            List(Var(j)))),
                                                                       LetBinding(VarPat(v),
                                                                                  MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                   *,
                                                                                                                   List(DoubleConst(0.002))),
                                                                                                        *,
                                                                                                        List(Var(e))),
                                                                                             *,
                                                                                             List(Var(q)))),
                                                                       LetBinding(TuplePat(List(VarPat(v84),
                                                                                                VarPat(v85))),
                                                                                  Tuple(List(Var(i),
                                                                                             Var(k)))),
                                                                       AssignQual(MapAccess(Var(v83),
                                                                                            MethodCall(MethodCall(Var(v84),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v85)))),
                                                                                  MethodCall(MapAccess(Var(v83),
                                                                                                       MethodCall(MethodCall(Var(v84),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v85)))),
                                                                                             ^,
                                                                                             List(Var(v)))))),
                                                    Var(v83)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(k))),
                                                      TuplePat(List(VarPat(__e),
                                                                    VarPat(__q))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(i),
                                                                                            Var(v80))),
                                                                                 Tuple(List(Tuple(List(Var(j))),
                                                                                            Var(v81)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(j))),
                                                                                              VarPat(v81))),
                                                                                Nth(Var(E),
                                                                                    3)),
                                                                      Generator(VarPat(v80),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(n),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v80),
                                                                                                 Var(k))),
                                                                                      Tuple(List(Tuple(List(Var(jj))),
                                                                                                 Var(v82)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                                                                 VarPat(jj))),
                                                                                                   VarPat(v82))),
                                                                                     Nth(Var(Q),
                                                                                         3)),
                                                                           Generator(VarPat(v80),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(d),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Normalized comprehension:
Tuple(List(Var(n),
           Var(d),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(k))),
                                         Block(List(VarDecl(v83,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_e))),
                                                                                 Var(__e)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_q))),
                                                                                 Var(__q)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(VarPat(v87),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v88),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v89),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v90),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Predicate(MethodCall(Var(v90),
                                                                                            ==,
                                                                                            List(Var(v88)))),
                                                                       AssignQual(MapAccess(Var(v83),
                                                                                            MethodCall(MethodCall(Var(v87),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v89)))),
                                                                                  MethodCall(MapAccess(Var(v83),
                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v89)))),
                                                                                             ^,
                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                   *,
                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                        *,
                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                             *,
                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                  +,
                                                                                                                                                  List(Var(v88)))))),
                                                                                                             *,
                                                                                                             List(MapAccess(Var(_q),
                                                                                                                            MethodCall(MethodCall(Var(v89),
                                                                                                                                                  *,
                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                       +,
                                                                                                                                       List(Var(v90))))))))))),
                                                    Var(v83)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(k))),
                                                      TuplePat(List(VarPat(__e),
                                                                    VarPat(__q))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(i),
                                                                                            Var(v80))),
                                                                                 Tuple(List(Tuple(List(Var(j))),
                                                                                            Var(v81)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(j))),
                                                                                              VarPat(v81))),
                                                                                Nth(Var(E),
                                                                                    3)),
                                                                      Generator(VarPat(v80),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(n),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v80),
                                                                                                 Var(k))),
                                                                                      Tuple(List(Tuple(List(Var(jj))),
                                                                                                 Var(v82)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                                                                 VarPat(jj))),
                                                                                                   VarPat(v82))),
                                                                                     Nth(Var(Q),
                                                                                         3)),
                                                                           Generator(VarPat(v80),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(d),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Optimized comprehension:
Tuple(List(Var(n),
           Var(d),
           Comprehension(List(Tuple(List(Tuple(List(Var(i), Var(k))),
                                         Block(List(VarDecl(v83,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_e))),
                                                                                 Var(__e)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_q))),
                                                                                 Var(__q)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(VarPat(v87),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v88),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v89),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       AssignQual(MapAccess(Var(v83),
                                                                                            MethodCall(MethodCall(Var(v87),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v89)))),
                                                                                  MethodCall(MapAccess(Var(v83),
                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v89)))),
                                                                                             ^,
                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                   *,
                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                        *,
                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                             *,
                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                  +,
                                                                                                                                                  List(Var(v88)))))),
                                                                                                             *,
                                                                                                             List(MapAccess(Var(_q),
                                                                                                                            MethodCall(MethodCall(Var(v89),
                                                                                                                                                  *,
                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                       +,
                                                                                                                                       List(Var(v88))))))))))),
                                                    Var(v83)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                    VarPat(k))),
                                                      TuplePat(List(VarPat(__e),
                                                                    VarPat(__q))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(i),
                                                                                            Var(v80))),
                                                                                 Tuple(List(Tuple(List(Var(j))),
                                                                                            Var(v81)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(j))),
                                                                                              VarPat(v81))),
                                                                                Nth(Var(E),
                                                                                    3)),
                                                                      Generator(VarPat(v80),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(n),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v80),
                                                                                                 Var(k))),
                                                                                      Tuple(List(Tuple(List(Var(jj))),
                                                                                                 Var(v82)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                                                                 VarPat(jj))),
                                                                                                   VarPat(v82))),
                                                                                     Nth(Var(Q),
                                                                                         3)),
                                                                           Generator(VarPat(v80),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(d),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Final Translated term:
Tuple(List(Var(n),
           Var(d),
           flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                      VarPat(k))),
                                        TuplePat(List(VarPat(__e),
                                                      VarPat(__q))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                              Var(k))),
                                                   Block(List(VarDecl(v83,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(TuplePat(List(VarPat(k1),
                                                                                             VarPat(_e))),
                                                                               Call(foreach,
                                                                                    List(Lambda(TuplePat(List(VarPat(k2),
                                                                                                              VarPat(_q))),
                                                                                                IfE(MethodCall(Var(k1),
                                                                                                               ==,
                                                                                                               List(Var(k2))),
                                                                                                    Call(foreach,
                                                                                                         List(Lambda(VarPat(v87),
                                                                                                                     Call(foreach,
                                                                                                                          List(Lambda(VarPat(v88),
                                                                                                                                      Call(foreach,
                                                                                                                                           List(Lambda(VarPat(v89),
                                                                                                                                                       Block(List(MethodCall(MapAccess(Var(v83),
                                                                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                  +,
                                                                                                                                                                                                  List(Var(v89)))),
                                                                                                                                                                             =,
                                                                                                                                                                             List(MethodCall(MapAccess(Var(v83),
                                                                                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                  List(Var(v89)))),
                                                                                                                                                                                             ^,
                                                                                                                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                                                                                                                   *,
                                                                                                                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                                                                                                                        *,
                                                                                                                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                                                  List(Var(v88)))))),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(MapAccess(Var(_q),
                                                                                                                                                                                                                            MethodCall(MethodCall(Var(v89),
                                                                                                                                                                                                                                                  *,
                                                                                                                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                                                                                                                       +,
                                                                                                                                                                                                                                       List(Var(v88))))))))))))),
                                                                                                                                                MethodCall(IntConst(0),
                                                                                                                                                           until,
                                                                                                                                                           List(IntConst(1000)))))),
                                                                                                                               MethodCall(IntConst(0),
                                                                                                                                          until,
                                                                                                                                          List(IntConst(1000)))))),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))),
                                                                                                    Block(List()))),
                                                                                         Var(__q)))),
                                                                        Var(__e))),
                                                              Var(v83)))))))),
                   MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                         VarPat(j))),
                                                           VarPat(v81))),
                                             flatMap(Lambda(VarPat(v80),
                                                            Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                Var(v80))),
                                                                                     Tuple(List(Tuple(List(Var(j))),
                                                                                                Var(v81)))))))),
                                                     MethodCall(IntConst(0),
                                                                until,
                                                                List(MethodCall(MethodCall(Var(n),
                                                                                           +,
                                                                                           List(IntConst(999))),
                                                                                /,
                                                                                List(IntConst(1000))))))),
                                      Nth(Var(E), 3)),
                              cogroup,
                              List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(k),
                                                                              VarPat(jj))),
                                                                VarPat(v82))),
                                                  flatMap(Lambda(VarPat(v80),
                                                                 Sequence(List(Tuple(List(Tuple(List(Var(v80),
                                                                                                     Var(k))),
                                                                                          Tuple(List(Tuple(List(Var(jj))),
                                                                                                     Var(v82)))))))),
                                                          MethodCall(IntConst(0),
                                                                     until,
                                                                     List(MethodCall(MethodCall(Var(d),
                                                                                                +,
                                                                                                List(IntConst(999))),
                                                                                     /,
                                                                                     List(IntConst(1000))))))),
                                           Nth(Var(Q), 3)))))))
Parallelized term:
Tuple(List(Var(n),
           Var(d),
           flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                      VarPat(k))),
                                        TuplePat(List(VarPat(__e),
                                                      VarPat(__q))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                              Var(k))),
                                                   Block(List(VarDecl(v83,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(TuplePat(List(VarPat(k1),
                                                                                             VarPat(_e))),
                                                                               Call(foreach,
                                                                                    List(Lambda(TuplePat(List(VarPat(k2),
                                                                                                              VarPat(_q))),
                                                                                                IfE(MethodCall(Var(k1),
                                                                                                               ==,
                                                                                                               List(Var(k2))),
                                                                                                    Call(foreach,
                                                                                                         List(Lambda(VarPat(v87),
                                                                                                                     Call(foreach,
                                                                                                                          List(Lambda(VarPat(v88),
                                                                                                                                      Call(foreach,
                                                                                                                                           List(Lambda(VarPat(v89),
                                                                                                                                                       Block(List(MethodCall(MapAccess(Var(v83),
                                                                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                  +,
                                                                                                                                                                                                  List(Var(v89)))),
                                                                                                                                                                             =,
                                                                                                                                                                             List(MethodCall(MapAccess(Var(v83),
                                                                                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                  List(Var(v89)))),
                                                                                                                                                                                             ^,
                                                                                                                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                                                                                                                   *,
                                                                                                                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                                                                                                                        *,
                                                                                                                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                                                                                                                       MethodCall(MethodCall(Var(v87),
                                                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                                                  List(Var(v88)))))),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(MapAccess(Var(_q),
                                                                                                                                                                                                                            MethodCall(MethodCall(Var(v89),
                                                                                                                                                                                                                                                  *,
                                                                                                                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                                                                                                                       +,
                                                                                                                                                                                                                                       List(Var(v88))))))))))))),
                                                                                                                                                MethodCall(IntConst(0),
                                                                                                                                                           until,
                                                                                                                                                           List(IntConst(1000)))))),
                                                                                                                               MethodCall(IntConst(0),
                                                                                                                                          until,
                                                                                                                                          List(IntConst(1000)))))),
                                                                                                              MethodCall(MethodCall(IntConst(0),
                                                                                                                                    until,
                                                                                                                                    List(IntConst(1000))),
                                                                                                                         par,
                                                                                                                         null))),
                                                                                                    Block(List()))),
                                                                                         Var(__q)))),
                                                                        Var(__e))),
                                                              Var(v83)))))))),
                   MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                         VarPat(j))),
                                                           VarPat(v81))),
                                             MethodCall(flatMap(Lambda(VarPat(v80),
                                                                       Sequence(List(Tuple(List(Tuple(List(Var(i),
                                                                                                           Var(v80))),
                                                                                                Tuple(List(Tuple(List(Var(j))),
                                                                                                           Var(v81)))))))),
                                                                MethodCall(MethodCall(IntConst(0),
                                                                                      until,
                                                                                      List(MethodCall(MethodCall(Var(n),
                                                                                                                 +,
                                                                                                                 List(IntConst(999))),
                                                                                                      /,
                                                                                                      List(IntConst(1000))))),
                                                                           par,
                                                                           null)),
                                                        toList,
                                                        null)),
                                      Nth(Var(E), 3)),
                              cogroup,
                              List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(k),
                                                                              VarPat(jj))),
                                                                VarPat(v82))),
                                                  MethodCall(flatMap(Lambda(VarPat(v80),
                                                                            Sequence(List(Tuple(List(Tuple(List(Var(v80),
                                                                                                                Var(k))),
                                                                                                     Tuple(List(Tuple(List(Var(jj))),
                                                                                                                Var(v82)))))))),
                                                                     MethodCall(MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(d),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000))))),
                                                                                par,
                                                                                null)),
                                                             toList,
                                                             null)),
                                           Nth(Var(Q), 3)))))))
Scala code:
scala.Tuple3(n, d, E._3.flatMap(((x$macro$228: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$228 match {
  case scala.Tuple2(scala.Tuple2((i @ _), (j @ _)), (v81 @ _)) => 0.until(n.+(999)./(1000)).par.map(((x$macro$230: Int) => x$macro$230 match {
  case (v80 @ _) => scala.Tuple2(scala.Tuple2(i, v80), scala.Tuple2(j, v81))
})).toList
})).cogroup(Q._3.flatMap(((x$macro$231: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$231 match {
  case scala.Tuple2(scala.Tuple2((k @ _), (jj @ _)), (v82 @ _)) => 0.until(d.+(999)./(1000)).par.map(((x$macro$233: Int) => x$macro$233 match {
  case (v80 @ _) => scala.Tuple2(scala.Tuple2(v80, k), scala.Tuple2(jj, v82))
})).toList
}))).map(((x$macro$234: scala.Tuple2[scala.Tuple2[Int, Int], scala.Tuple2[Iterable[scala.Tuple2[Int, Array[Double]]], Iterable[scala.Tuple2[Int, Array[Double]]]]]) => x$macro$234 match {
  case scala.Tuple2(scala.Tuple2((i @ _), (k @ _)), scala.Tuple2((__e @ _), (__q @ _))) => scala.Tuple2(scala.Tuple2(i, k), {
    val v83 = Array.ofDim[Double](1000000);
    __e.foreach(((x$macro$238: scala.Tuple2[Int, Array[Double]]) => (x$macro$238 match {
      case scala.Tuple2((k1 @ _), (_e @ _)) => __q.foreach(((x$macro$242: scala.Tuple2[Int, Array[Double]]) => (x$macro$242 match {
        case scala.Tuple2((k2 @ _), (_q @ _)) => if (k1.==(k2))
          0.until(1000).par.foreach(((v87: Int) => 0.until(1000).foreach(((v88: Int) => 0.until(1000).foreach(((v89: Int) => v83.update(v87.*(1000).+(v89), v83(v87.*(1000).+(v89)).^((2).*(0.002).*(_e(v87.*(1000).+(v88))).*(_q(v89.*(1000).+(v88)))))))))))
        else
          ()
      })))
    })));
    v83
  })
})))
Scala type: scala.Tuple3[Int, Int, org.apache.spark.rdd.RDD[scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]]]
Term:
Call(tiled,
     List(Tuple(List(Var(m), Var(d))),
          Comprehension(List(Tuple(List(Tuple(List(Var(k), Var(j))),
                                        reduce(^, Var(v))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(j))),
                                                     VarPat(e))),
                                       Var(E)),
                             Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                   VarPat(k))),
                                                     VarPat(p))),
                                       Var(P)),
                             Predicate(MethodCall(Var(ii),
                                                  ==,
                                                  List(Var(i)))),
                             LetBinding(VarPat(v),
                                        MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                         *,
                                                                         List(DoubleConst(0.002))),
                                                              *,
                                                              List(Var(e))),
                                                   *,
                                                   List(Var(p)))),
                             GroupByQual(TuplePat(List(VarPat(k),
                                                       VarPat(j))),
                                         Tuple(List(Var(k), Var(j))))))))
Lifted term:
Call(tiled,
     List(Tuple(List(Var(m), Var(d))),
          Comprehension(List(Tuple(List(Tuple(List(Var(k), Var(j))),
                                        reduce(^, Var(v))))),
                        List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                   VarPat(j))),
                                                     VarPat(e))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v95),
                                                                                          Var(v96))),
                                                                               MapAccess(Var(v94),
                                                                                         Tuple(List(MethodCall(Var(v95),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v96),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v97),
                                                                                             VarPat(v98),
                                                                                             VarPat(v93))),
                                                                               Var(E)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v91),
                                                                                                          VarPat(v92))),
                                                                                            VarPat(v94))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v93),
                                                                                        Var(v93)))),
                                                                    Generator(VarPat(v95),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v97)))),
                                                                    Generator(VarPat(v96),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v98)))),
                                                                    Predicate(MethodCall(Var(v91),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v95),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v92),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v96),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(E)))),
                             Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                   VarPat(k))),
                                                     VarPat(p))),
                                       Call(lifted,
                                            List(StringConst("tiled"),
                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v103),
                                                                                          Var(v104))),
                                                                               MapAccess(Var(v102),
                                                                                         Tuple(List(MethodCall(Var(v103),
                                                                                                               %,
                                                                                                               List(IntConst(1000))),
                                                                                                    MethodCall(Var(v104),
                                                                                                               %,
                                                                                                               List(IntConst(1000))))))))),
                                                               List(LetBinding(TuplePat(List(VarPat(v105),
                                                                                             VarPat(v106),
                                                                                             VarPat(v101))),
                                                                               Var(P)),
                                                                    Generator(TuplePat(List(TuplePat(List(VarPat(v99),
                                                                                                          VarPat(v100))),
                                                                                            VarPat(v102))),
                                                                              Call(lifted,
                                                                                   List(StringConst("rdd"),
                                                                                        Var(v101),
                                                                                        Var(v101)))),
                                                                    Generator(VarPat(v103),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v105)))),
                                                                    Generator(VarPat(v104),
                                                                              MethodCall(IntConst(0),
                                                                                         until,
                                                                                         List(Var(v106)))),
                                                                    Predicate(MethodCall(Var(v99),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v103),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))),
                                                                    Predicate(MethodCall(Var(v100),
                                                                                         ==,
                                                                                         List(MethodCall(Var(v104),
                                                                                                         /,
                                                                                                         List(IntConst(1000)))))))),
                                                 Var(P)))),
                             Predicate(MethodCall(Var(ii),
                                                  ==,
                                                  List(Var(i)))),
                             LetBinding(VarPat(v),
                                        MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                         *,
                                                                         List(DoubleConst(0.002))),
                                                              *,
                                                              List(Var(e))),
                                                   *,
                                                   List(Var(p)))),
                             GroupByQual(TuplePat(List(VarPat(k),
                                                       VarPat(j))),
                                         Tuple(List(Var(k), Var(j))))))))
Translated comprehension:
Tuple(List(Var(m),
           Var(d),
           Comprehension(List(Tuple(List(Tuple(List(Var(k), Var(j))),
                                         Block(List(VarDecl(v114,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_e))),
                                                                                 Var(__e)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_p))),
                                                                                 Var(__p)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                             VarPat(j))),
                                                                                               VarPat(e))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v107),
                                                                                                                          Var(v108))),
                                                                                                               MapAccess(Var(_e),
                                                                                                                         MethodCall(MethodCall(Var(v107),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v108))))))),
                                                                                               List(Generator(VarPat(v107),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v108),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                             VarPat(k))),
                                                                                               VarPat(p))),
                                                                                 Comprehension(List(Tuple(List(Tuple(List(Var(v109),
                                                                                                                          Var(v110))),
                                                                                                               MapAccess(Var(_p),
                                                                                                                         MethodCall(MethodCall(Var(v109),
                                                                                                                                               *,
                                                                                                                                               List(IntConst(1000))),
                                                                                                                                    +,
                                                                                                                                    List(Var(v110))))))),
                                                                                               List(Generator(VarPat(v109),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000)))),
                                                                                                    Generator(VarPat(v110),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))))),
                                                                       Predicate(MethodCall(Var(ii),
                                                                                            ==,
                                                                                            List(Var(i)))),
                                                                       LetBinding(VarPat(v),
                                                                                  MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                   *,
                                                                                                                   List(DoubleConst(0.002))),
                                                                                                        *,
                                                                                                        List(Var(e))),
                                                                                             *,
                                                                                             List(Var(p)))),
                                                                       LetBinding(TuplePat(List(VarPat(v115),
                                                                                                VarPat(v116))),
                                                                                  Tuple(List(Var(k),
                                                                                             Var(j)))),
                                                                       AssignQual(MapAccess(Var(v114),
                                                                                            MethodCall(MethodCall(Var(v115),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v116)))),
                                                                                  MethodCall(MapAccess(Var(v114),
                                                                                                       MethodCall(MethodCall(Var(v115),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v116)))),
                                                                                             ^,
                                                                                             List(Var(v)))))),
                                                    Var(v114)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                    VarPat(j))),
                                                      TuplePat(List(VarPat(__e),
                                                                    VarPat(__p))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(j),
                                                                                            Var(v111))),
                                                                                 Tuple(List(Tuple(List(Var(i))),
                                                                                            Var(v112)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(j))),
                                                                                              VarPat(v112))),
                                                                                Nth(Var(E),
                                                                                    3)),
                                                                      Generator(VarPat(v111),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(m),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v111),
                                                                                                 Var(k))),
                                                                                      Tuple(List(Tuple(List(Var(ii))),
                                                                                                 Var(v113)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                                 VarPat(k))),
                                                                                                   VarPat(v113))),
                                                                                     Nth(Var(P),
                                                                                         3)),
                                                                           Generator(VarPat(v111),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(d),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Normalized comprehension:
Tuple(List(Var(m),
           Var(d),
           Comprehension(List(Tuple(List(Tuple(List(Var(k), Var(j))),
                                         Block(List(VarDecl(v114,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_e))),
                                                                                 Var(__e)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_p))),
                                                                                 Var(__p)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(VarPat(v118),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v119),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v120),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v121),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Predicate(MethodCall(Var(v120),
                                                                                            ==,
                                                                                            List(Var(v118)))),
                                                                       AssignQual(MapAccess(Var(v114),
                                                                                            MethodCall(MethodCall(Var(v121),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v119)))),
                                                                                  MethodCall(MapAccess(Var(v114),
                                                                                                       MethodCall(MethodCall(Var(v121),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v119)))),
                                                                                             ^,
                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                   *,
                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                        *,
                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                       MethodCall(MethodCall(Var(v118),
                                                                                                                                                             *,
                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                  +,
                                                                                                                                                  List(Var(v119)))))),
                                                                                                             *,
                                                                                                             List(MapAccess(Var(_p),
                                                                                                                            MethodCall(MethodCall(Var(v120),
                                                                                                                                                  *,
                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                       +,
                                                                                                                                       List(Var(v121))))))))))),
                                                    Var(v114)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                    VarPat(j))),
                                                      TuplePat(List(VarPat(__e),
                                                                    VarPat(__p))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(j),
                                                                                            Var(v111))),
                                                                                 Tuple(List(Tuple(List(Var(i))),
                                                                                            Var(v112)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(j))),
                                                                                              VarPat(v112))),
                                                                                Nth(Var(E),
                                                                                    3)),
                                                                      Generator(VarPat(v111),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(m),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v111),
                                                                                                 Var(k))),
                                                                                      Tuple(List(Tuple(List(Var(ii))),
                                                                                                 Var(v113)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                                 VarPat(k))),
                                                                                                   VarPat(v113))),
                                                                                     Nth(Var(P),
                                                                                         3)),
                                                                           Generator(VarPat(v111),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(d),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Optimized comprehension:
Tuple(List(Var(m),
           Var(d),
           Comprehension(List(Tuple(List(Tuple(List(Var(k), Var(j))),
                                         Block(List(VarDecl(v114,
                                                            Call(tile, List())),
                                                    Comprehension(List(),
                                                                  List(Generator(TuplePat(List(VarPat(k1),
                                                                                               VarPat(_e))),
                                                                                 Var(__e)),
                                                                       Generator(TuplePat(List(VarPat(k2),
                                                                                               VarPat(_p))),
                                                                                 Var(__p)),
                                                                       Predicate(MethodCall(Var(k1),
                                                                                            ==,
                                                                                            List(Var(k2)))),
                                                                       Generator(VarPat(v118),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v119),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       Generator(VarPat(v121),
                                                                                 MethodCall(IntConst(0),
                                                                                            until,
                                                                                            List(IntConst(1000)))),
                                                                       AssignQual(MapAccess(Var(v114),
                                                                                            MethodCall(MethodCall(Var(v121),
                                                                                                                  *,
                                                                                                                  List(IntConst(1000))),
                                                                                                       +,
                                                                                                       List(Var(v119)))),
                                                                                  MethodCall(MapAccess(Var(v114),
                                                                                                       MethodCall(MethodCall(Var(v121),
                                                                                                                             *,
                                                                                                                             List(IntConst(1000))),
                                                                                                                  +,
                                                                                                                  List(Var(v119)))),
                                                                                             ^,
                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                   *,
                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                        *,
                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                       MethodCall(MethodCall(Var(v118),
                                                                                                                                                             *,
                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                  +,
                                                                                                                                                  List(Var(v119)))))),
                                                                                                             *,
                                                                                                             List(MapAccess(Var(_p),
                                                                                                                            MethodCall(MethodCall(Var(v118),
                                                                                                                                                  *,
                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                       +,
                                                                                                                                       List(Var(v121))))))))))),
                                                    Var(v114)))))),
                         List(Generator(TuplePat(List(TuplePat(List(VarPat(k),
                                                                    VarPat(j))),
                                                      TuplePat(List(VarPat(__e),
                                                                    VarPat(__p))))),
                                        MethodCall(Comprehension(List(Tuple(List(Tuple(List(Var(j),
                                                                                            Var(v111))),
                                                                                 Tuple(List(Tuple(List(Var(i))),
                                                                                            Var(v112)))))),
                                                                 List(Generator(TuplePat(List(TuplePat(List(VarPat(i),
                                                                                                            VarPat(j))),
                                                                                              VarPat(v112))),
                                                                                Nth(Var(E),
                                                                                    3)),
                                                                      Generator(VarPat(v111),
                                                                                MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(m),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000)))))))),
                                                   cogroup,
                                                   List(Comprehension(List(Tuple(List(Tuple(List(Var(v111),
                                                                                                 Var(k))),
                                                                                      Tuple(List(Tuple(List(Var(ii))),
                                                                                                 Var(v113)))))),
                                                                      List(Generator(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                                                                 VarPat(k))),
                                                                                                   VarPat(v113))),
                                                                                     Nth(Var(P),
                                                                                         3)),
                                                                           Generator(VarPat(v111),
                                                                                     MethodCall(IntConst(0),
                                                                                                until,
                                                                                                List(MethodCall(MethodCall(Var(d),
                                                                                                                           +,
                                                                                                                           List(IntConst(999))),
                                                                                                                /,
                                                                                                                List(IntConst(1000)))))))))))))))
Final Translated term:
Tuple(List(Var(m),
           Var(d),
           flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(k),
                                                      VarPat(j))),
                                        TuplePat(List(VarPat(__e),
                                                      VarPat(__p))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(k),
                                                              Var(j))),
                                                   Block(List(VarDecl(v114,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(TuplePat(List(VarPat(k1),
                                                                                             VarPat(_e))),
                                                                               Call(foreach,
                                                                                    List(Lambda(TuplePat(List(VarPat(k2),
                                                                                                              VarPat(_p))),
                                                                                                IfE(MethodCall(Var(k1),
                                                                                                               ==,
                                                                                                               List(Var(k2))),
                                                                                                    Call(foreach,
                                                                                                         List(Lambda(VarPat(v118),
                                                                                                                     Call(foreach,
                                                                                                                          List(Lambda(VarPat(v119),
                                                                                                                                      Call(foreach,
                                                                                                                                           List(Lambda(VarPat(v121),
                                                                                                                                                       Block(List(MethodCall(MapAccess(Var(v114),
                                                                                                                                                                                       MethodCall(MethodCall(Var(v121),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                  +,
                                                                                                                                                                                                  List(Var(v119)))),
                                                                                                                                                                             =,
                                                                                                                                                                             List(MethodCall(MapAccess(Var(v114),
                                                                                                                                                                                                       MethodCall(MethodCall(Var(v121),
                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                  List(Var(v119)))),
                                                                                                                                                                                             ^,
                                                                                                                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                                                                                                                   *,
                                                                                                                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                                                                                                                        *,
                                                                                                                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                                                                                                                       MethodCall(MethodCall(Var(v118),
                                                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                                                  List(Var(v119)))))),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(MapAccess(Var(_p),
                                                                                                                                                                                                                            MethodCall(MethodCall(Var(v118),
                                                                                                                                                                                                                                                  *,
                                                                                                                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                                                                                                                       +,
                                                                                                                                                                                                                                       List(Var(v121))))))))))))),
                                                                                                                                                MethodCall(IntConst(0),
                                                                                                                                                           until,
                                                                                                                                                           List(IntConst(1000)))))),
                                                                                                                               MethodCall(IntConst(0),
                                                                                                                                          until,
                                                                                                                                          List(IntConst(1000)))))),
                                                                                                              MethodCall(IntConst(0),
                                                                                                                         until,
                                                                                                                         List(IntConst(1000))))),
                                                                                                    Block(List()))),
                                                                                         Var(__p)))),
                                                                        Var(__e))),
                                                              Var(v114)))))))),
                   MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                         VarPat(j))),
                                                           VarPat(v112))),
                                             flatMap(Lambda(VarPat(v111),
                                                            Sequence(List(Tuple(List(Tuple(List(Var(j),
                                                                                                Var(v111))),
                                                                                     Tuple(List(Tuple(List(Var(i))),
                                                                                                Var(v112)))))))),
                                                     MethodCall(IntConst(0),
                                                                until,
                                                                List(MethodCall(MethodCall(Var(m),
                                                                                           +,
                                                                                           List(IntConst(999))),
                                                                                /,
                                                                                List(IntConst(1000))))))),
                                      Nth(Var(E), 3)),
                              cogroup,
                              List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                              VarPat(k))),
                                                                VarPat(v113))),
                                                  flatMap(Lambda(VarPat(v111),
                                                                 Sequence(List(Tuple(List(Tuple(List(Var(v111),
                                                                                                     Var(k))),
                                                                                          Tuple(List(Tuple(List(Var(ii))),
                                                                                                     Var(v113)))))))),
                                                          MethodCall(IntConst(0),
                                                                     until,
                                                                     List(MethodCall(MethodCall(Var(d),
                                                                                                +,
                                                                                                List(IntConst(999))),
                                                                                     /,
                                                                                     List(IntConst(1000))))))),
                                           Nth(Var(P), 3)))))))
Parallelized term:
Tuple(List(Var(m),
           Var(d),
           flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(k),
                                                      VarPat(j))),
                                        TuplePat(List(VarPat(__e),
                                                      VarPat(__p))))),
                          Sequence(List(Tuple(List(Tuple(List(Var(k),
                                                              Var(j))),
                                                   Block(List(VarDecl(v114,
                                                                      Call(tile,
                                                                           List())),
                                                              Call(foreach,
                                                                   List(Lambda(TuplePat(List(VarPat(k1),
                                                                                             VarPat(_e))),
                                                                               Call(foreach,
                                                                                    List(Lambda(TuplePat(List(VarPat(k2),
                                                                                                              VarPat(_p))),
                                                                                                IfE(MethodCall(Var(k1),
                                                                                                               ==,
                                                                                                               List(Var(k2))),
                                                                                                    Call(foreach,
                                                                                                         List(Lambda(VarPat(v118),
                                                                                                                     Call(foreach,
                                                                                                                          List(Lambda(VarPat(v119),
                                                                                                                                      Call(foreach,
                                                                                                                                           List(Lambda(VarPat(v121),
                                                                                                                                                       Block(List(MethodCall(MapAccess(Var(v114),
                                                                                                                                                                                       MethodCall(MethodCall(Var(v121),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                  +,
                                                                                                                                                                                                  List(Var(v119)))),
                                                                                                                                                                             =,
                                                                                                                                                                             List(MethodCall(MapAccess(Var(v114),
                                                                                                                                                                                                       MethodCall(MethodCall(Var(v121),
                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                  List(Var(v119)))),
                                                                                                                                                                                             ^,
                                                                                                                                                                                             List(MethodCall(MethodCall(MethodCall(IntConst(2),
                                                                                                                                                                                                                                   *,
                                                                                                                                                                                                                                   List(DoubleConst(0.002))),
                                                                                                                                                                                                                        *,
                                                                                                                                                                                                                        List(MapAccess(Var(_e),
                                                                                                                                                                                                                                       MethodCall(MethodCall(Var(v118),
                                                                                                                                                                                                                                                             *,
                                                                                                                                                                                                                                                             List(IntConst(1000))),
                                                                                                                                                                                                                                                  +,
                                                                                                                                                                                                                                                  List(Var(v119)))))),
                                                                                                                                                                                                             *,
                                                                                                                                                                                                             List(MapAccess(Var(_p),
                                                                                                                                                                                                                            MethodCall(MethodCall(Var(v118),
                                                                                                                                                                                                                                                  *,
                                                                                                                                                                                                                                                  List(IntConst(1000))),
                                                                                                                                                                                                                                       +,
                                                                                                                                                                                                                                       List(Var(v121))))))))))))),
                                                                                                                                                MethodCall(IntConst(0),
                                                                                                                                                           until,
                                                                                                                                                           List(IntConst(1000)))))),
                                                                                                                               MethodCall(IntConst(0),
                                                                                                                                          until,
                                                                                                                                          List(IntConst(1000)))))),
                                                                                                              MethodCall(MethodCall(IntConst(0),
                                                                                                                                    until,
                                                                                                                                    List(IntConst(1000))),
                                                                                                                         par,
                                                                                                                         null))),
                                                                                                    Block(List()))),
                                                                                         Var(__p)))),
                                                                        Var(__e))),
                                                              Var(v114)))))))),
                   MethodCall(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(i),
                                                                         VarPat(j))),
                                                           VarPat(v112))),
                                             MethodCall(flatMap(Lambda(VarPat(v111),
                                                                       Sequence(List(Tuple(List(Tuple(List(Var(j),
                                                                                                           Var(v111))),
                                                                                                Tuple(List(Tuple(List(Var(i))),
                                                                                                           Var(v112)))))))),
                                                                MethodCall(MethodCall(IntConst(0),
                                                                                      until,
                                                                                      List(MethodCall(MethodCall(Var(m),
                                                                                                                 +,
                                                                                                                 List(IntConst(999))),
                                                                                                      /,
                                                                                                      List(IntConst(1000))))),
                                                                           par,
                                                                           null)),
                                                        toList,
                                                        null)),
                                      Nth(Var(E), 3)),
                              cogroup,
                              List(flatMap(Lambda(TuplePat(List(TuplePat(List(VarPat(ii),
                                                                              VarPat(k))),
                                                                VarPat(v113))),
                                                  MethodCall(flatMap(Lambda(VarPat(v111),
                                                                            Sequence(List(Tuple(List(Tuple(List(Var(v111),
                                                                                                                Var(k))),
                                                                                                     Tuple(List(Tuple(List(Var(ii))),
                                                                                                                Var(v113)))))))),
                                                                     MethodCall(MethodCall(IntConst(0),
                                                                                           until,
                                                                                           List(MethodCall(MethodCall(Var(d),
                                                                                                                      +,
                                                                                                                      List(IntConst(999))),
                                                                                                           /,
                                                                                                           List(IntConst(1000))))),
                                                                                par,
                                                                                null)),
                                                             toList,
                                                             null)),
                                           Nth(Var(P), 3)))))))
Scala code:
scala.Tuple3(m, d, E._3.flatMap(((x$macro$376: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$376 match {
  case scala.Tuple2(scala.Tuple2((i @ _), (j @ _)), (v112 @ _)) => 0.until(m.+(999)./(1000)).par.map(((x$macro$378: Int) => x$macro$378 match {
  case (v111 @ _) => scala.Tuple2(scala.Tuple2(j, v111), scala.Tuple2(i, v112))
})).toList
})).cogroup(P._3.flatMap(((x$macro$379: scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]) => x$macro$379 match {
  case scala.Tuple2(scala.Tuple2((ii @ _), (k @ _)), (v113 @ _)) => 0.until(d.+(999)./(1000)).par.map(((x$macro$381: Int) => x$macro$381 match {
  case (v111 @ _) => scala.Tuple2(scala.Tuple2(v111, k), scala.Tuple2(ii, v113))
})).toList
}))).map(((x$macro$382: scala.Tuple2[scala.Tuple2[Int, Int], scala.Tuple2[Iterable[scala.Tuple2[Int, Array[Double]]], Iterable[scala.Tuple2[Int, Array[Double]]]]]) => x$macro$382 match {
  case scala.Tuple2(scala.Tuple2((k @ _), (j @ _)), scala.Tuple2((__e @ _), (__p @ _))) => scala.Tuple2(scala.Tuple2(k, j), {
    val v114 = Array.ofDim[Double](1000000);
    __e.foreach(((x$macro$386: scala.Tuple2[Int, Array[Double]]) => (x$macro$386 match {
      case scala.Tuple2((k1 @ _), (_e @ _)) => __p.foreach(((x$macro$390: scala.Tuple2[Int, Array[Double]]) => (x$macro$390 match {
        case scala.Tuple2((k2 @ _), (_p @ _)) => if (k1.==(k2))
          0.until(1000).par.foreach(((v118: Int) => 0.until(1000).foreach(((v119: Int) => 0.until(1000).foreach(((v121: Int) => v114.update(v121.*(1000).+(v119), v114(v121.*(1000).+(v119)).^((2).*(0.002).*(_e(v118.*(1000).+(v119))).*(_p(v118.*(1000).+(v121)))))))))))
        else
          ()
      })))
    })));
    v114
  })
})))
Scala type: scala.Tuple3[Int, Int, org.apache.spark.rdd.RDD[scala.Tuple2[scala.Tuple2[Int, Int], Array[Double]]]]
20/08/10 09:06:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 09:06:19 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 09:06:19 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:06:19 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 09:06:19 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:06:19 INFO spark.SparkContext: Submitted application: tiles
20/08/10 09:06:19 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 09:06:19 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 09:06:19 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 09:06:19 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 09:06:19 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 09:06:20 INFO util.Utils: Successfully started service 'sparkDriver' on port 34737.
20/08/10 09:06:20 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 09:06:20 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 09:06:20 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 09:06:20 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 09:06:20 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 09:06:20 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-3a00c234-19da-4dc7-b7bc-2c2ef58d36db
20/08/10 09:06:20 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 09:06:20 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 09:06:20 INFO util.log: Logging initialized @2363ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 09:06:20 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 09:06:20 INFO server.Server: Started @2461ms
20/08/10 09:06:20 INFO server.AbstractConnector: Started ServerConnector@74fef3f7{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 09:06:20 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4463d9d3{/jobs,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@c3fa05a{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4a699efa{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@17ae7628{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6579c3d9{/stages,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@66434cc8{/stages/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@693e4d19{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1c12f3ee{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@29182679{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5cbb84b1{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6a84bc2a{/storage,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@511d5d04{/storage/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@27068a50{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5328a9c1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@48bfb884{/environment,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@715fb77{/environment/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2e52fb3e{/executors,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3e9803c2{/executors/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7c974942{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@60921b21{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4d4960c8{/static,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3703bf3c{/,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b3f3ba0{/api,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3f36b447{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5eeedb60{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 09:06:20 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 09:06:20 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:34737/jars/array.jar with timestamp 1597075580570
20/08/10 09:06:20 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:34737/jars/test.jar with timestamp 1597075580571
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 09:06:20 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810090620-0000
20/08/10 09:06:20 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 33496.
20/08/10 09:06:20 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:33496
20/08/10 09:06:20 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 09:06:20 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 33496, None)
20/08/10 09:06:20 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:33496 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 33496, None)
20/08/10 09:06:20 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 33496, None)
20/08/10 09:06:20 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 33496, None)
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:20 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810090620-0000/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:06:20 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810090620-0000/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/2 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/1 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/3 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/0 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/5 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/4 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/6 is now RUNNING
20/08/10 09:06:21 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810090620-0000/7 is now RUNNING
20/08/10 09:06:21 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@62566842{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 09:06:21 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 148.552
Try: 2/2 time: 142.367
Try: 3/3 time: 141.279
Try: 4/4 time: 141.519
*** MLlib Factorization cores=24 n=8940 m=8940 d=1000 N=1000 0.60 GB tries=4 143.429 secs
20/08/10 09:16:01 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 09:16:02 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 09:16:02 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:16:02 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 09:16:02 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:16:02 INFO spark.SparkContext: Submitted application: tiles
20/08/10 09:16:02 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 09:16:02 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 09:16:02 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 09:16:02 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 09:16:02 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 09:16:02 INFO util.Utils: Successfully started service 'sparkDriver' on port 33826.
20/08/10 09:16:02 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 09:16:02 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 09:16:02 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 09:16:02 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 09:16:02 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 09:16:02 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-e1707c68-4b0f-4dd2-b2c7-59a911787e7a
20/08/10 09:16:02 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 09:16:02 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 09:16:02 INFO util.log: Logging initialized @2223ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 09:16:02 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 09:16:02 INFO server.Server: Started @2308ms
20/08/10 09:16:02 INFO server.AbstractConnector: Started ServerConnector@74fef3f7{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 09:16:02 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4463d9d3{/jobs,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@c3fa05a{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4a699efa{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@17ae7628{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6579c3d9{/stages,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@66434cc8{/stages/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@693e4d19{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1c12f3ee{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@29182679{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5cbb84b1{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6a84bc2a{/storage,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@511d5d04{/storage/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@27068a50{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5328a9c1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@48bfb884{/environment,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@715fb77{/environment/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2e52fb3e{/executors,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3e9803c2{/executors/json,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7c974942{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 09:16:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@60921b21{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4d4960c8{/static,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3703bf3c{/,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b3f3ba0{/api,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3f36b447{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5eeedb60{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 09:16:03 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:33826/jars/array.jar with timestamp 1597076163041
20/08/10 09:16:03 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:33826/jars/test.jar with timestamp 1597076163042
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 09:16:03 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810091603-0001
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:16:03 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 33928.
20/08/10 09:16:03 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:33928
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:16:03 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091603-0001/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091603-0001/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:16:03 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 33928, None)
20/08/10 09:16:03 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:33928 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 33928, None)
20/08/10 09:16:03 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 33928, None)
20/08/10 09:16:03 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 33928, None)
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/4 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/5 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/2 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/3 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/6 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/1 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/0 is now RUNNING
20/08/10 09:16:03 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091603-0001/7 is now RUNNING
20/08/10 09:16:03 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@62566842{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 09:16:03 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 47.659
Try: 2/2 time: 41.715
Try: 3/3 time: 37.686
Try: 4/4 time: 40.304
*** DIABLO Factorization cores=24 n=8940 m=8940 d=1000 N=1000 0.60 GB tries=4 41.841 secs
20/08/10 09:18:58 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 09:18:58 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 09:18:59 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:18:59 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 09:18:59 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:18:59 INFO spark.SparkContext: Submitted application: tiles
20/08/10 09:18:59 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 09:18:59 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 09:18:59 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 09:18:59 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 09:18:59 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 09:18:59 INFO util.Utils: Successfully started service 'sparkDriver' on port 43949.
20/08/10 09:18:59 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 09:18:59 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 09:18:59 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 09:18:59 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 09:18:59 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 09:18:59 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-653358e4-9227-41a1-9e2e-327d5ae04c2f
20/08/10 09:18:59 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 09:18:59 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 09:18:59 INFO util.log: Logging initialized @2213ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 09:18:59 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 09:18:59 INFO server.Server: Started @2298ms
20/08/10 09:18:59 INFO server.AbstractConnector: Started ServerConnector@54410646{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 09:18:59 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5395ea39{/jobs,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4a699efa{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4905c46b{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6579c3d9{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@66434cc8{/stages,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@693e4d19{/stages/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5432050b{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@29182679{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5cbb84b1{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6a84bc2a{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@511d5d04{/storage,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@27068a50{/storage/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5328a9c1{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@48bfb884{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@715fb77{/environment,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2e52fb3e{/environment/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3e9803c2{/executors,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7c974942{/executors/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@60921b21{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4d4960c8{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@773bd77b{/static,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b3f3ba0{/,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@278f8425{/api,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5eeedb60{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4a1c0752{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 09:18:59 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 09:18:59 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:43949/jars/array.jar with timestamp 1597076339769
20/08/10 09:18:59 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:43949/jars/test.jar with timestamp 1597076339769
20/08/10 09:18:59 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 09:18:59 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810091900-0002
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:19:00 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 41742.
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:41742
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810091900-0002/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810091900-0002/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:19:00 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 09:19:00 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 41742, None)
20/08/10 09:19:00 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:41742 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 41742, None)
20/08/10 09:19:00 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 41742, None)
20/08/10 09:19:00 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 41742, None)
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/4 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/5 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/1 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/2 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/3 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/7 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/6 is now RUNNING
20/08/10 09:19:00 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810091900-0002/0 is now RUNNING
20/08/10 09:19:00 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@37191ef0{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 09:19:00 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 295.721
Try: 2/2 time: 294.818
Try: 3/3 time: 298.974
Try: 4/4 time: 291.806
*** MLlib Factorization cores=24 n=12640 m=12640 d=1000 N=1000 1.19 GB tries=4 295.330 secs
20/08/10 09:38:50 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 09:38:51 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 09:38:51 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:38:51 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 09:38:51 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:38:51 INFO spark.SparkContext: Submitted application: tiles
20/08/10 09:38:51 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 09:38:51 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 09:38:51 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 09:38:51 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 09:38:51 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 09:38:51 INFO util.Utils: Successfully started service 'sparkDriver' on port 44831.
20/08/10 09:38:51 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 09:38:51 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 09:38:51 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 09:38:51 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 09:38:51 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 09:38:51 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-ecb0012d-9f4f-480e-bf6f-d3348ba077e3
20/08/10 09:38:51 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 09:38:51 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 09:38:51 INFO util.log: Logging initialized @2244ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 09:38:51 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 09:38:51 INFO server.Server: Started @2328ms
20/08/10 09:38:51 INFO server.AbstractConnector: Started ServerConnector@74fef3f7{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 09:38:51 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4463d9d3{/jobs,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@c3fa05a{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4a699efa{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@17ae7628{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6579c3d9{/stages,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@66434cc8{/stages/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@693e4d19{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1c12f3ee{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@29182679{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5cbb84b1{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6a84bc2a{/storage,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@511d5d04{/storage/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@27068a50{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5328a9c1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@48bfb884{/environment,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@715fb77{/environment/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2e52fb3e{/executors,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3e9803c2{/executors/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7c974942{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@60921b21{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4d4960c8{/static,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3703bf3c{/,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b3f3ba0{/api,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3f36b447{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5eeedb60{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 09:38:51 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 09:38:51 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:44831/jars/array.jar with timestamp 1597077531790
20/08/10 09:38:51 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:44831/jars/test.jar with timestamp 1597077531791
20/08/10 09:38:51 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 09:38:51 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810093852-0003
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:38:52 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 40247.
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810093852-0003/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:38:52 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:40247
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810093852-0003/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:38:52 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 09:38:52 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 40247, None)
20/08/10 09:38:52 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:40247 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 40247, None)
20/08/10 09:38:52 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 40247, None)
20/08/10 09:38:52 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 40247, None)
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/6 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/7 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/0 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/2 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/3 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/4 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/5 is now RUNNING
20/08/10 09:38:52 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810093852-0003/1 is now RUNNING
20/08/10 09:38:52 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@62566842{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 09:38:52 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 84.427
Try: 2/2 time: 92.573
Try: 3/3 time: 84.523
Try: 4/4 time: 82.602
*** DIABLO Factorization cores=24 n=12640 m=12640 d=1000 N=1000 1.19 GB tries=4 86.031 secs
20/08/10 09:44:46 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 09:44:47 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 09:44:47 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:44:47 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 09:44:47 INFO resource.ResourceUtils: ==============================================================
20/08/10 09:44:47 INFO spark.SparkContext: Submitted application: tiles
20/08/10 09:44:47 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 09:44:47 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 09:44:47 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 09:44:47 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 09:44:47 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 09:44:47 INFO util.Utils: Successfully started service 'sparkDriver' on port 39001.
20/08/10 09:44:47 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 09:44:47 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 09:44:47 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 09:44:47 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 09:44:47 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 09:44:47 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-67623558-cde8-45d8-9c26-3000a02eb908
20/08/10 09:44:47 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 09:44:47 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 09:44:47 INFO util.log: Logging initialized @2536ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 09:44:47 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 09:44:47 INFO server.Server: Started @2624ms
20/08/10 09:44:47 INFO server.AbstractConnector: Started ServerConnector@30276338{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 09:44:47 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@43b0ade{/jobs,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b44b63d{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@38499e48{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1136b469{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2b87581{/stages,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@42f22995{/stages/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@286b39c2{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6d467c87{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@57bd802b{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2c779e5{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5183d589{/storage,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@682c1e93{/storage/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@68e62ca4{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b78fdb1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@11653e3b{/environment,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1b9c1b51{/environment/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@16fe9c29{/executors,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4525d1d3{/executors/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1eea9d2d{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@bd2f5a9{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7808fb9{/static,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@34cf5a97{/,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@ddf20fd{/api,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6443b128{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40021799{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 09:44:47 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 09:44:47 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:39001/jars/array.jar with timestamp 1597077887984
20/08/10 09:44:47 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:39001/jars/test.jar with timestamp 1597077887984
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 09:44:48 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810094448-0004
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:44:48 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 46372.
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810094448-0004/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 09:44:48 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:46372
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810094448-0004/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 09:44:48 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 09:44:48 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 46372, None)
20/08/10 09:44:48 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:46372 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 46372, None)
20/08/10 09:44:48 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 46372, None)
20/08/10 09:44:48 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 46372, None)
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/5 is now RUNNING
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/6 is now RUNNING
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/1 is now RUNNING
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/7 is now RUNNING
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/4 is now RUNNING
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/0 is now RUNNING
20/08/10 09:44:48 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2f1ea80d{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/2 is now RUNNING
20/08/10 09:44:48 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
20/08/10 09:44:48 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810094448-0004/3 is now RUNNING
Try: 1/1 time: 418.864
Try: 2/2 time: 419.271
Try: 3/3 time: 422.94
Try: 4/4 time: 421.305
*** MLlib Factorization cores=24 n=15480 m=15480 d=1000 N=1000 1.79 GB tries=4 420.595 secs
20/08/10 10:13:03 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 10:13:03 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 10:13:03 INFO resource.ResourceUtils: ==============================================================
20/08/10 10:13:03 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 10:13:03 INFO resource.ResourceUtils: ==============================================================
20/08/10 10:13:03 INFO spark.SparkContext: Submitted application: tiles
20/08/10 10:13:03 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 10:13:03 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 10:13:03 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 10:13:03 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 10:13:03 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 10:13:04 INFO util.Utils: Successfully started service 'sparkDriver' on port 36550.
20/08/10 10:13:04 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 10:13:04 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 10:13:04 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 10:13:04 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 10:13:04 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 10:13:04 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-20085dd7-612d-4c11-840a-5f3cab9cceb4
20/08/10 10:13:04 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 10:13:04 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 10:13:04 INFO util.log: Logging initialized @2406ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 10:13:04 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 10:13:04 INFO server.Server: Started @2494ms
20/08/10 10:13:04 INFO server.AbstractConnector: Started ServerConnector@47a199b5{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 10:13:04 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@43b0ade{/jobs,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b44b63d{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@38499e48{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1136b469{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2b87581{/stages,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@42f22995{/stages/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@286b39c2{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6d467c87{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@57bd802b{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2c779e5{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5183d589{/storage,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@682c1e93{/storage/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@68e62ca4{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b78fdb1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@11653e3b{/environment,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1b9c1b51{/environment/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@16fe9c29{/executors,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4525d1d3{/executors/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1eea9d2d{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@bd2f5a9{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7808fb9{/static,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@34cf5a97{/,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@ddf20fd{/api,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6443b128{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40021799{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 10:13:04 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:36550/jars/array.jar with timestamp 1597079584453
20/08/10 10:13:04 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:36550/jars/test.jar with timestamp 1597079584454
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 10:13:04 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810101304-0005
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35883.
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 10:13:04 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:35883
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810101304-0005/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810101304-0005/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 10:13:04 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 10:13:04 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 35883, None)
20/08/10 10:13:04 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:35883 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 35883, None)
20/08/10 10:13:04 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 35883, None)
20/08/10 10:13:04 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 35883, None)
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/4 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/5 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/6 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/7 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/2 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/3 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/0 is now RUNNING
20/08/10 10:13:04 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810101304-0005/1 is now RUNNING
20/08/10 10:13:04 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2f1ea80d{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 10:13:04 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 129.336
Try: 2/2 time: 140.239
Try: 3/3 time: 131.906
Try: 4/4 time: 122.188
*** DIABLO Factorization cores=24 n=15480 m=15480 d=1000 N=1000 1.79 GB tries=4 130.917 secs
20/08/10 10:22:00 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 10:22:00 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 10:22:00 INFO resource.ResourceUtils: ==============================================================
20/08/10 10:22:00 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 10:22:00 INFO resource.ResourceUtils: ==============================================================
20/08/10 10:22:00 INFO spark.SparkContext: Submitted application: tiles
20/08/10 10:22:00 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 10:22:00 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 10:22:00 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 10:22:00 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 10:22:00 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 10:22:01 INFO util.Utils: Successfully started service 'sparkDriver' on port 33161.
20/08/10 10:22:01 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 10:22:01 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 10:22:01 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 10:22:01 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 10:22:01 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 10:22:01 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-db734e42-26c5-4409-8853-2176d7a0d683
20/08/10 10:22:01 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 10:22:01 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 10:22:01 INFO util.log: Logging initialized @2243ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 10:22:01 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 10:22:01 INFO server.Server: Started @2333ms
20/08/10 10:22:01 INFO server.AbstractConnector: Started ServerConnector@2e6d9e9a{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 10:22:01 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@43b0ade{/jobs,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b44b63d{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@38499e48{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1136b469{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2b87581{/stages,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@42f22995{/stages/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@286b39c2{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6d467c87{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@57bd802b{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2c779e5{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5183d589{/storage,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@682c1e93{/storage/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@68e62ca4{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b78fdb1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@11653e3b{/environment,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1b9c1b51{/environment/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@16fe9c29{/executors,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4525d1d3{/executors/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1eea9d2d{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@bd2f5a9{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7808fb9{/static,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@34cf5a97{/,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@ddf20fd{/api,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6443b128{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40021799{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 10:22:01 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 10:22:01 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:33161/jars/array.jar with timestamp 1597080121518
20/08/10 10:22:01 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:33161/jars/test.jar with timestamp 1597080121519
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 10:22:01 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810102201-0006
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 45147.
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:45147
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810102201-0006/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 10:22:01 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810102201-0006/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 10:22:01 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 10:22:01 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 45147, None)
20/08/10 10:22:01 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:45147 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 45147, None)
20/08/10 10:22:01 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 45147, None)
20/08/10 10:22:01 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 45147, None)
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/5 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/4 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/1 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/6 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/7 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/0 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/3 is now RUNNING
20/08/10 10:22:01 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810102201-0006/2 is now RUNNING
20/08/10 10:22:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2f1ea80d{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 10:22:02 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 558.057
Try: 2/2 time: 550.748
Try: 3/3 time: 550.797
Try: 4/4 time: 548.06
*** MLlib Factorization cores=24 n=17880 m=17880 d=1000 N=1000 2.38 GB tries=4 551.916 secs
20/08/10 10:59:00 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 10:59:01 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 10:59:01 INFO resource.ResourceUtils: ==============================================================
20/08/10 10:59:01 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 10:59:01 INFO resource.ResourceUtils: ==============================================================
20/08/10 10:59:01 INFO spark.SparkContext: Submitted application: tiles
20/08/10 10:59:01 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 10:59:01 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 10:59:01 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 10:59:01 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 10:59:01 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 10:59:01 INFO util.Utils: Successfully started service 'sparkDriver' on port 33851.
20/08/10 10:59:01 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 10:59:01 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 10:59:01 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 10:59:01 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 10:59:01 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 10:59:01 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-307d89d4-b6e5-4d59-9d1d-e4cfa036677a
20/08/10 10:59:01 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 10:59:01 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 10:59:01 INFO util.log: Logging initialized @2265ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 10:59:01 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 10:59:01 INFO server.Server: Started @2350ms
20/08/10 10:59:01 INFO server.AbstractConnector: Started ServerConnector@70980566{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 10:59:01 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@43b0ade{/jobs,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b44b63d{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@38499e48{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1136b469{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2b87581{/stages,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@42f22995{/stages/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@286b39c2{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6d467c87{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@57bd802b{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2c779e5{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5183d589{/storage,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@682c1e93{/storage/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@68e62ca4{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b78fdb1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@11653e3b{/environment,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1b9c1b51{/environment/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@16fe9c29{/executors,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4525d1d3{/executors/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1eea9d2d{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@bd2f5a9{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7808fb9{/static,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@34cf5a97{/,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@ddf20fd{/api,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6443b128{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40021799{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 10:59:01 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 10:59:02 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:33851/jars/array.jar with timestamp 1597082342004
20/08/10 10:59:02 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:33851/jars/test.jar with timestamp 1597082342005
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 10:59:02 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810105902-0007
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 10:59:02 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 35100.
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810105902-0007/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 10:59:02 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:35100
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810105902-0007/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 10:59:02 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 10:59:02 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 35100, None)
20/08/10 10:59:02 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:35100 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 35100, None)
20/08/10 10:59:02 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 35100, None)
20/08/10 10:59:02 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 35100, None)
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/6 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/4 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/5 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/0 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/2 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/1 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/3 is now RUNNING
20/08/10 10:59:02 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810105902-0007/7 is now RUNNING
20/08/10 10:59:02 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2f1ea80d{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 10:59:02 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 168.993
Try: 2/2 time: 159.191
Try: 3/3 time: 181.734
Try: 4/4 time: 167.799
*** DIABLO Factorization cores=24 n=17880 m=17880 d=1000 N=1000 2.38 GB tries=4 169.429 secs
20/08/10 11:10:31 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 11:10:32 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 11:10:32 INFO resource.ResourceUtils: ==============================================================
20/08/10 11:10:32 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 11:10:32 INFO resource.ResourceUtils: ==============================================================
20/08/10 11:10:32 INFO spark.SparkContext: Submitted application: tiles
20/08/10 11:10:32 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 11:10:32 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 11:10:32 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 11:10:32 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 11:10:32 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 11:10:32 INFO util.Utils: Successfully started service 'sparkDriver' on port 35638.
20/08/10 11:10:32 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 11:10:32 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 11:10:32 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 11:10:32 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 11:10:32 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 11:10:32 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-7a8f8c9c-277c-41d9-99d6-a7599100e136
20/08/10 11:10:32 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 11:10:32 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 11:10:32 INFO util.log: Logging initialized @2500ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 11:10:32 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 11:10:32 INFO server.Server: Started @2585ms
20/08/10 11:10:32 INFO server.AbstractConnector: Started ServerConnector@71a2e785{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 11:10:32 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@43b0ade{/jobs,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7b44b63d{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@38499e48{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1136b469{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2b87581{/stages,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@42f22995{/stages/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@286b39c2{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6d467c87{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@57bd802b{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2c779e5{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5183d589{/storage,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@682c1e93{/storage/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@68e62ca4{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b78fdb1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@11653e3b{/environment,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1b9c1b51{/environment/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@16fe9c29{/executors,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4525d1d3{/executors/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1eea9d2d{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@bd2f5a9{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7808fb9{/static,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@34cf5a97{/,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@ddf20fd{/api,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6443b128{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@40021799{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 11:10:32 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 11:10:32 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:35638/jars/array.jar with timestamp 1597083032865
20/08/10 11:10:32 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:35638/jars/test.jar with timestamp 1597083032866
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 11:10:33 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810111033-0008
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 37987.
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810111033-0008/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810111033-0008/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 11:10:33 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:37987
20/08/10 11:10:33 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 11:10:33 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 37987, None)
20/08/10 11:10:33 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:37987 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 37987, None)
20/08/10 11:10:33 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 37987, None)
20/08/10 11:10:33 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 37987, None)
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/4 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/1 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/5 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/6 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/7 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/2 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/3 is now RUNNING
20/08/10 11:10:33 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810111033-0008/0 is now RUNNING
20/08/10 11:10:33 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2f1ea80d{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 11:10:33 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 656.406
Try: 2/2 time: 655.959
Try: 3/3 time: 659.148
Try: 4/4 time: 657.705
*** MLlib Factorization cores=24 n=20000 m=20000 d=1000 N=1000 2.98 GB tries=4 657.305 secs
20/08/10 11:54:37 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
20/08/10 11:54:37 INFO spark.SparkContext: Running Spark version 3.0.0
20/08/10 11:54:37 INFO resource.ResourceUtils: ==============================================================
20/08/10 11:54:37 INFO resource.ResourceUtils: Resources for spark.driver:

20/08/10 11:54:37 INFO resource.ResourceUtils: ==============================================================
20/08/10 11:54:37 INFO spark.SparkContext: Submitted application: tiles
20/08/10 11:54:37 INFO spark.SecurityManager: Changing view acls to: fegaras
20/08/10 11:54:37 INFO spark.SecurityManager: Changing modify acls to: fegaras
20/08/10 11:54:37 INFO spark.SecurityManager: Changing view acls groups to: 
20/08/10 11:54:37 INFO spark.SecurityManager: Changing modify acls groups to: 
20/08/10 11:54:37 INFO spark.SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users  with view permissions: Set(fegaras); groups with view permissions: Set(); users  with modify permissions: Set(fegaras); groups with modify permissions: Set()
20/08/10 11:54:38 INFO util.Utils: Successfully started service 'sparkDriver' on port 40933.
20/08/10 11:54:38 INFO spark.SparkEnv: Registering MapOutputTracker
20/08/10 11:54:38 INFO spark.SparkEnv: Registering BlockManagerMaster
20/08/10 11:54:38 INFO storage.BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
20/08/10 11:54:38 INFO storage.BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
20/08/10 11:54:38 INFO spark.SparkEnv: Registering BlockManagerMasterHeartbeat
20/08/10 11:54:38 INFO storage.DiskBlockManager: Created local directory at /tmp/blockmgr-a806dead-efb4-4a46-9991-2efd05af0d40
20/08/10 11:54:38 INFO memory.MemoryStore: MemoryStore started with capacity 31.8 GiB
20/08/10 11:54:38 INFO spark.SparkEnv: Registering OutputCommitCoordinator
20/08/10 11:54:38 INFO util.log: Logging initialized @2262ms to org.sparkproject.jetty.util.log.Slf4jLog
20/08/10 11:54:38 INFO server.Server: jetty-9.4.z-SNAPSHOT; built: 2019-04-29T20:42:08.989Z; git: e1bc35120a6617ee3df052294e433f3a25ce7097; jvm 1.8.0_212-b04
20/08/10 11:54:38 INFO server.Server: Started @2347ms
20/08/10 11:54:38 INFO server.AbstractConnector: Started ServerConnector@4a1667a2{HTTP/1.1,[http/1.1]}{comet-17-09.ibnet:4040}
20/08/10 11:54:38 INFO util.Utils: Successfully started service 'SparkUI' on port 4040.
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4463d9d3{/jobs,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@c3fa05a{/jobs/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4a699efa{/jobs/job,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@17ae7628{/jobs/job/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6579c3d9{/stages,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@66434cc8{/stages/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@693e4d19{/stages/stage,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@1c12f3ee{/stages/stage/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@29182679{/stages/pool,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5cbb84b1{/stages/pool/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@6a84bc2a{/storage,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@511d5d04{/storage/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@27068a50{/storage/rdd,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5328a9c1{/storage/rdd/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@48bfb884{/environment,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@715fb77{/environment/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@2e52fb3e{/executors,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3e9803c2{/executors/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@7c974942{/executors/threadDump,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@60921b21{/executors/threadDump/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@4d4960c8{/static,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3703bf3c{/,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5b3f3ba0{/api,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@3f36b447{/jobs/job/kill,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@5eeedb60{/stages/stage/kill,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO ui.SparkUI: Bound SparkUI to comet-17-09.ibnet, and started at http://comet-17-09.ibnet:4040
20/08/10 11:54:38 INFO spark.SparkContext: Added JAR file:///oasis/projects/nsf/uot143/fegaras/array/lib/array.jar at spark://comet-17-09.ibnet:40933/jars/array.jar with timestamp 1597085678468
20/08/10 11:54:38 INFO spark.SparkContext: Added JAR file:/oasis/projects/nsf/uot143/fegaras/array/tests/spark/test.jar at spark://comet-17-09.ibnet:40933/jars/test.jar with timestamp 1597085678469
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Connecting to master spark://comet-17-09.ibnet:7077...
20/08/10 11:54:38 INFO client.TransportClientFactory: Successfully created connection to comet-17-09.ibnet/10.22.251.190:7077 after 30 ms (0 ms spent in bootstraps)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Connected to Spark cluster with app ID app-20200810115438-0009
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/0 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/0 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/1 on worker-20200810090614-198.202.113.33-41072 (198.202.113.33:41072) with 11 core(s)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/1 on hostPort 198.202.113.33:41072 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/2 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/2 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/3 on worker-20200810090614-198.202.117.33-46480 (198.202.117.33:46480) with 11 core(s)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/3 on hostPort 198.202.117.33:46480 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/4 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/4 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/5 on worker-20200810090614-198.202.113.31-46430 (198.202.113.31:46430) with 11 core(s)
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/5 on hostPort 198.202.113.31:46430 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/6 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 11:54:38 INFO util.Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 36097.
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/6 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor added: app-20200810115438-0009/7 on worker-20200810090614-198.202.117.34-44301 (198.202.117.34:44301) with 11 core(s)
20/08/10 11:54:38 INFO netty.NettyBlockTransferService: Server created on comet-17-09.ibnet:36097
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: Granted executor ID app-20200810115438-0009/7 on hostPort 198.202.117.34:44301 with 11 core(s), 60.0 GiB RAM
20/08/10 11:54:38 INFO storage.BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
20/08/10 11:54:38 INFO storage.BlockManagerMaster: Registering BlockManager BlockManagerId(driver, comet-17-09.ibnet, 36097, None)
20/08/10 11:54:38 INFO storage.BlockManagerMasterEndpoint: Registering block manager comet-17-09.ibnet:36097 with 31.8 GiB RAM, BlockManagerId(driver, comet-17-09.ibnet, 36097, None)
20/08/10 11:54:38 INFO storage.BlockManagerMaster: Registered BlockManager BlockManagerId(driver, comet-17-09.ibnet, 36097, None)
20/08/10 11:54:38 INFO storage.BlockManager: Initialized BlockManager: BlockManagerId(driver, comet-17-09.ibnet, 36097, None)
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/4 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/2 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/5 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/7 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/3 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/1 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/0 is now RUNNING
20/08/10 11:54:38 INFO client.StandaloneAppClient$ClientEndpoint: Executor updated: app-20200810115438-0009/6 is now RUNNING
20/08/10 11:54:38 INFO handler.ContextHandler: Started o.s.j.s.ServletContextHandler@62566842{/metrics/json,null,AVAILABLE,@Spark}
20/08/10 11:54:38 INFO cluster.StandaloneSchedulerBackend: SchedulerBackend is ready for scheduling beginning after reached minRegisteredResourcesRatio: 0.0
Try: 1/1 time: 190.774
Try: 2/2 time: 221.33
Try: 3/3 time: 217.702
20/08/10 12:08:56 ERROR scheduler.TaskSetManager: Task 0 in stage 84.0 failed 4 times; aborting job
org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 84.0 failed 4 times, most recent failure: Lost task 0.3 in stage 84.0 (TID 100, 198.202.113.33, executor 0): java.io.IOException: No space left on device
	at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
	at sun.nio.ch.FileDispatcherImpl.write(FileDispatcherImpl.java:60)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:51)
	at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)
	at sun.nio.ch.FileChannelImpl.transferToTrustedChannel(FileChannelImpl.java:516)
	at sun.nio.ch.FileChannelImpl.transferTo(FileChannelImpl.java:609)
	at org.apache.spark.util.Utils$.copyFileStreamNIO(Utils.scala:429)
	at org.apache.spark.util.Utils.copyFileStreamNIO(Utils.scala)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.writePartitionedDataWithChannel(BypassMergeSortShuffleWriter.java:232)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.writePartitionedData(BypassMergeSortShuffleWriter.java:205)
	at org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:167)
	at org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)
	at org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)
	at org.apache.spark.scheduler.Task.run(Task.scala:127)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:444)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1377)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:447)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)

Driver stacktrace:
Try: 4/5 time: 256.845
*** DIABLO Factorization cores=24 n=20000 m=20000 d=1000 N=1000 2.98 GB tries=4 221.663 secs
comet-17-19.ibnet: stopping org.apache.spark.deploy.worker.Worker
comet-17-17.ibnet: stopping org.apache.spark.deploy.worker.Worker
comet-17-23.ibnet: stopping org.apache.spark.deploy.worker.Worker
comet-17-09.ibnet: stopping org.apache.spark.deploy.worker.Worker
stopping org.apache.spark.deploy.master.Master
Stopping namenodes on [comet-17-09.ibnet]
comet-17-09.ibnet: stopping namenode
comet-17-17.ibnet: stopping datanode
comet-17-23.ibnet: stopping datanode
comet-17-09.ibnet: stopping datanode
comet-17-19.ibnet: stopping datanode
Stopping secondary namenodes [comet-17-09.ibnet]
comet-17-09.ibnet: stopping secondarynamenode
Copying Hadoop logs back to /home/fegaras/cometcluster/logs...
‘/scratch/fegaras/35207014/logs’ -> ‘/home/fegaras/cometcluster/logs’
‘/scratch/fegaras/35207014/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.log’ -> ‘/home/fegaras/cometcluster/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.log’
‘/scratch/fegaras/35207014/logs/spark-fegaras-org.apache.spark.deploy.master.Master-1-comet-17-09.out’ -> ‘/home/fegaras/cometcluster/logs/spark-fegaras-org.apache.spark.deploy.master.Master-1-comet-17-09.out’
‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.log’ -> ‘/home/fegaras/cometcluster/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.log’
‘/scratch/fegaras/35207014/logs/SecurityAuth-fegaras.audit’ -> ‘/home/fegaras/cometcluster/logs/SecurityAuth-fegaras.audit’
‘/scratch/fegaras/35207014/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.log’ -> ‘/home/fegaras/cometcluster/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.log’
‘/scratch/fegaras/35207014/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.out’ -> ‘/home/fegaras/cometcluster/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.out’
‘/scratch/fegaras/35207014/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.out’ -> ‘/home/fegaras/cometcluster/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.out’
‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.out’ -> ‘/home/fegaras/cometcluster/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.out’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/edits_0000000000000000005-0000000000000000006’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/fsimage_0000000000000000006.md5’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/fsimage_0000000000000000008.md5’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/edits_0000000000000000001-0000000000000000002’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/edits_0000000000000000003-0000000000000000004’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/fsimage_0000000000000000008’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/edits_0000000000000000007-0000000000000000008’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/fsimage_0000000000000000006’
removed ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current/VERSION’
removed directory: ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary/current’
removed directory: ‘/scratch/fegaras/35207014/tmp/dfs/namesecondary’
removed directory: ‘/scratch/fegaras/35207014/tmp/dfs’
removed directory: ‘/scratch/fegaras/35207014/tmp’
removed ‘/scratch/fegaras/35207014/namenode_data/current/fsimage_0000000000000000008’
removed ‘/scratch/fegaras/35207014/namenode_data/current/fsimage_0000000000000000006’
removed ‘/scratch/fegaras/35207014/namenode_data/current/edits_0000000000000000007-0000000000000000008’
removed ‘/scratch/fegaras/35207014/namenode_data/current/edits_0000000000000000003-0000000000000000004’
removed ‘/scratch/fegaras/35207014/namenode_data/current/VERSION’
removed ‘/scratch/fegaras/35207014/namenode_data/current/edits_0000000000000000001-0000000000000000002’
removed ‘/scratch/fegaras/35207014/namenode_data/current/edits_inprogress_0000000000000000009’
removed ‘/scratch/fegaras/35207014/namenode_data/current/edits_0000000000000000005-0000000000000000006’
removed ‘/scratch/fegaras/35207014/namenode_data/current/seen_txid’
removed ‘/scratch/fegaras/35207014/namenode_data/current/fsimage_0000000000000000008.md5’
removed ‘/scratch/fegaras/35207014/namenode_data/current/fsimage_0000000000000000006.md5’
removed directory: ‘/scratch/fegaras/35207014/namenode_data/current’
removed directory: ‘/scratch/fegaras/35207014/namenode_data’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/rbw’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/finalized’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/VERSION’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/dfsUsed’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/dncp_block_verification.log.curr’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/tmp’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/VERSION’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data’
removed directory: ‘/scratch/fegaras/35207014/pids’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.log’
removed ‘/scratch/fegaras/35207014/logs/spark-fegaras-org.apache.spark.deploy.master.Master-1-comet-17-09.out’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.log’
removed ‘/scratch/fegaras/35207014/logs/SecurityAuth-fegaras.audit’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.log’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-namenode-comet-17-09.sdsc.edu.out’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-secondarynamenode-comet-17-09.sdsc.edu.out’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-09.sdsc.edu.out’
removed directory: ‘/scratch/fegaras/35207014/logs’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/VERSION’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/dncp_block_verification.log.curr’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/VERSION’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/rbw’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/dfsUsed’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/finalized’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/tmp’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data’
removed directory: ‘/scratch/fegaras/35207014/pids’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-17.sdsc.edu.log’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-17.sdsc.edu.out’
removed ‘/scratch/fegaras/35207014/logs/SecurityAuth-fegaras.audit’
removed directory: ‘/scratch/fegaras/35207014/logs’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/rbw’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/finalized’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/dfsUsed’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/VERSION’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/dncp_block_verification.log.curr’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/tmp’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/VERSION’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data’
removed directory: ‘/scratch/fegaras/35207014/pids’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-19.sdsc.edu.out’
removed ‘/scratch/fegaras/35207014/logs/SecurityAuth-fegaras.audit’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-19.sdsc.edu.log’
removed directory: ‘/scratch/fegaras/35207014/logs’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/tmp’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/dncp_block_verification.log.curr’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/rbw’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/finalized’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/VERSION’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current/dfsUsed’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732/current’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current/BP-859233011-198.202.113.31-1597075536732’
removed ‘/scratch/fegaras/35207014/hdfs_data/current/VERSION’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data/current’
removed directory: ‘/scratch/fegaras/35207014/hdfs_data’
removed directory: ‘/scratch/fegaras/35207014/pids’
removed ‘/scratch/fegaras/35207014/logs/SecurityAuth-fegaras.audit’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-23.sdsc.edu.log’
removed ‘/scratch/fegaras/35207014/logs/hadoop-fegaras-datanode-comet-17-23.sdsc.edu.out’
removed directory: ‘/scratch/fegaras/35207014/logs’
removed directory: ‘/tmp/Jetty_0_0_0_0_50070_hdfs____w2cu08/jsp’
removed directory: ‘/tmp/Jetty_0_0_0_0_50070_hdfs____w2cu08/.active’
removed directory: ‘/tmp/Jetty_0_0_0_0_50070_hdfs____w2cu08’
removed directory: ‘/tmp/Jetty_0_0_0_0_50075_datanode____hwtdwq_5076141942950997297/jsp’
removed directory: ‘/tmp/Jetty_0_0_0_0_50075_datanode____hwtdwq_5076141942950997297/.active’
removed directory: ‘/tmp/Jetty_0_0_0_0_50075_datanode____hwtdwq_5076141942950997297’
removed directory: ‘/tmp/Jetty_comet.17.09_ibnet_50090_secondary____p2ow06/jsp’
removed directory: ‘/tmp/Jetty_comet.17.09_ibnet_50090_secondary____p2ow06/.active’
removed directory: ‘/tmp/Jetty_comet.17.09_ibnet_50090_secondary____p2ow06’
