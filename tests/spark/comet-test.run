#!/bin/bash
#SBATCH -A uot143
#SBATCH --job-name="array"
#SBATCH --output="run.log"
#SBATCH --partition=compute
#SBATCH --nodes=4
#SBATCH --export=ALL
#SBATCH --time=60    # time limit in minutes

nodes=$SLURM_NNODES
echo "Number of nodes = " $nodes

# Comet node: 24 cores (23 available), 128 GB RAM
#   executor-cores = 11   (2 executors/node)
#   executor-memory = 60GB
#   num-executors = nodes*2-1
executors=$((nodes*2-1))
echo "Number of executors = " $executors

SPARK_OPTIONS="--driver-memory 60G --num-executors $executors --executor-cores 11 --executor-memory 60G --supervise"

# location of spark, scala, and array
SW=/oasis/projects/nsf/uot143/$USER

export HADOOP_CONF_DIR=$HOME/cometcluster
module load hadoop/2.6.0

ARRAY_HOME=$SW/array

export JAVA_HOME=/lib/jvm/java

if [ -z ${SCALA_HOME} ]; then
   export SCALA_HOME=$SW/scala-2.11.8
fi

if [ -z ${SPARK_HOME} ]; then
   export SPARK_HOME=$SW/spark-2.2.0-bin-hadoop2.6
fi

myhadoop-configure.sh
source $HOME/cometcluster/spark/spark-env.sh
export SPARK_MASTER_HOST=$SPARK_MASTER_IP
# start HDFS
start-dfs.sh
# start Spark
$SPARK_HOME/sbin/start-all.sh -h $SPARK_MASTER_HOST

JARS=.
for I in $SPARK_HOME/jars/*.jar; do
    JARS=$JARS:$I
done

rm -rf classes
mkdir -p classes

scala_files="tiles.scala"
for f in $scala_files; do
    echo compiling $f ...
    $SCALA_HOME/bin/scalac -d classes -cp classes:${JARS}:${ARRAY_HOME}/lib/array.jar $f
done

jar cf test.jar -C classes .


scale=100   # scale of datasets
ns=5        # number of datasets per experiment
repeat=1    # number of repetitions of each experiment

tile_size=1000

for tile_size in 10000; do
for ((i=$ns; i<=$ns; i++)); do   # for each different dataset

   j=$(echo "scale=3;sqrt($i/$ns)*100*$scale" | bc); n=${j%.*}
      $SPARK_HOME/bin/spark-submit --jars ${ARRAY_HOME}/lib/array.jar --class Tiles --master $MASTER $SPARK_OPTIONS test.jar 2 $repeat $n $tile_size

   j=$(echo "scale=3;sqrt($i/$ns)*100*$scale" | bc); n=${j%.*}
      $SPARK_HOME/bin/spark-submit --jars ${ARRAY_HOME}/lib/array.jar --class Tiles --master $MASTER $SPARK_OPTIONS test.jar 3 $repeat $n $tile_size

   j=$(echo "scale=3;sqrt($i/$ns)*100*$scale" | bc); n=${j%.*}
      $SPARK_HOME/bin/spark-submit --jars ${ARRAY_HOME}/lib/array.jar --class Tiles --master $MASTER $SPARK_OPTIONS test.jar 5 $repeat $n $tile_size

   j=$(echo "scale=3;sqrt($i/$ns)*100*$scale" | bc); n=${j%.*}
      $SPARK_HOME/bin/spark-submit --jars ${ARRAY_HOME}/lib/array.jar --class Tiles --master $MASTER $SPARK_OPTIONS test.jar 6 $repeat $n $tile_size

done
done

$SPARK_HOME/sbin/stop-all.sh
stop-dfs.sh
myhadoop-cleanup.sh
